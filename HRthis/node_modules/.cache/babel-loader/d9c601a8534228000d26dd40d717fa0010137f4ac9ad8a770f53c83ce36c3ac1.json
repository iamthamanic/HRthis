{"ast":null,"code":"import{getOpenAITextResponse}from'./chat-service';/**\n * AI Training Content Generator\n * Uses OpenAI GPT-4o to generate training content, lessons, and quizzes\n */export const generateTrainingContent=async request=>{const prompt=\"\\nDu bist ein Experte f\\xFCr Unternehmensschulungen und E-Learning. Erstelle eine strukturierte Schulung basierend auf folgenden Vorgaben:\\n\\n**Schulungsanfrage:**\\n- Thema: \".concat(request.topic,\"\\n- Beschreibung: \").concat(request.description,\"\\n- Zielgruppe: \").concat(request.targetAudience,\"\\n- Dauer: \").concat(request.duration,\" Minuten\\n- Schwierigkeitsgrad: \").concat(request.difficulty,\"\\n- Anzahl Lektionen: \").concat(request.lessonCount,\"\\n- Quiz einschlie\\xDFen: \").concat(request.includeQuiz?'Ja':'Nein',\"\\n\\n**Aufgabe:**\\nErstelle eine vollst\\xE4ndige Schulung mit folgender Struktur:\\n\\n1. **Schulungstitel**: Pr\\xE4gnanter, professioneller Titel\\n2. **Beschreibung**: Umfassende Beschreibung der Schulung (2-3 S\\xE4tze)\\n3. **Lektionen**: \").concat(request.lessonCount,\" Lektionen mit jeweils:\\n   - Titel der Lektion\\n   - Kurze Beschreibung (1-2 S\\xE4tze)\\n   - Detaillierter Inhalt (strukturiert mit \\xDCberschriften, Aufz\\xE4hlungen, praktischen Beispielen)\\n   \").concat(request.includeQuiz?'- Quiz mit 2-3 Multiple-Choice-Fragen pro Lektion\\n   - Jede Frage mit 4 Antwortmöglichkeiten, korrekter Antwort und Erklärung':'',\"\\n\\n\").concat(request.includeQuiz?\"4. **Abschlusspr\\xFCfung**: \\n   - 2-3 zusammenfassende Fragen \\xFCber alle Lektionen\\n   - Bestehensgrenze: 70%\":'',\"\\n\\n**Wichtige Anforderungen:**\\n- Inhalt muss praxisnah und unternehmensrelevant sein\\n- Verwende klare, verst\\xE4ndliche Sprache\\n- Strukturiere den Inhalt logisch und aufbauend\\n- Beispiele und Fallstudien einbauen\\n- Bei \").concat(request.difficulty==='BEGINNER'?'Anfänger: Grundlagen erklären':request.difficulty==='INTERMEDIATE'?'Fortgeschritten: Vertiefte Kenntnisse vermitteln':'Experte: Spezialisiertes Fachwissen',\"\\n\\n**Antwortformat:**\\nAntworte ausschlie\\xDFlich in folgendem JSON-Format:\\n\\n{\\n  \\\"title\\\": \\\"Schulungstitel\\\",\\n  \\\"description\\\": \\\"Schulungsbeschreibung\\\",\\n  \\\"lessons\\\": [\\n    {\\n      \\\"title\\\": \\\"Lektionstitel\\\",\\n      \\\"description\\\": \\\"Lektionsbeschreibung\\\",\\n      \\\"content\\\": \\\"Detaillierter Lektionsinhalt mit Markdown-Formatierung\\\",\\n      \").concat(request.includeQuiz?\"\\\"quiz\\\": {\\n        \\\"questions\\\": [\\n          {\\n            \\\"question\\\": \\\"Frage?\\\",\\n            \\\"options\\\": [\\\"Option A\\\", \\\"Option B\\\", \\\"Option C\\\", \\\"Option D\\\"],\\n            \\\"correctAnswer\\\": 0,\\n            \\\"explanation\\\": \\\"Erkl\\xE4rung der korrekten Antwort\\\"\\n          }\\n        ],\\n        \\\"passingScore\\\": 80\\n      }\":'',\"\\n    }\\n  ]\").concat(request.includeQuiz?\",\\n  \\\"finalQuiz\\\": {\\n    \\\"questions\\\": [\\n      {\\n        \\\"question\\\": \\\"Abschlussfrage?\\\",\\n        \\\"options\\\": [\\\"Option A\\\", \\\"Option B\\\", \\\"Option C\\\", \\\"Option D\\\"],\\n        \\\"correctAnswer\\\": 0,\\n        \\\"explanation\\\": \\\"Erkl\\xE4rung\\\"\\n      }\\n    ],\\n    \\\"passingScore\\\": 70\\n  }\":'',\"\\n}\\n\\nErstelle jetzt die Schulung:\");try{const aiResponse=await getOpenAITextResponse([{role:'system',content:'Du bist ein Experte für Unternehmensschulungen und E-Learning-Content. Erstelle hochwertige, strukturierte Schulungsinhalte in deutscher Sprache.'},{role:'user',content:prompt}],{model:'gpt-4o'});const response=aiResponse.content;// Parse the AI response\nlet parsedContent;try{// Extract JSON from response (in case there's additional text)\nconst jsonMatch=response.match(/\\{[\\s\\S]*\\}/);const jsonString=jsonMatch?jsonMatch[0]:response;parsedContent=JSON.parse(jsonString);}catch(parseError){// Fallback: create structured content from text response\nparsedContent={title:\"\".concat(request.topic,\" - Umfassende Schulung\"),description:\"Eine strukturierte Schulung zu \".concat(request.topic,\" f\\xFCr \").concat(request.targetAudience,\". Diese Schulung vermittelt alle wichtigen Grundlagen und praktischen Anwendungen.\"),lessons:Array.from({length:request.lessonCount},(_,i)=>({title:\"Lektion \".concat(i+1,\": \").concat(request.topic,\" Grundlagen\"),description:\"In dieser Lektion lernen Sie die wichtigsten Aspekte von \".concat(request.topic,\" kennen.\"),content:\"# Lektion \".concat(i+1,\": \").concat(request.topic,\"\\n\\n\").concat(response.substring(0,500),\"...\"),quiz:request.includeQuiz?{questions:[{question:\"Was ist das wichtigste Prinzip bei \".concat(request.topic,\"?\"),options:['Sicherheit und Compliance','Effizienz','Kostenoptimierung','Alle genannten Punkte'],correctAnswer:3,explanation:\"Bei \".concat(request.topic,\" sind alle Aspekte wichtig, aber besonders die Balance zwischen Sicherheit, Effizienz und Kosten.\")}],passingScore:80}:undefined})),finalQuiz:request.includeQuiz?{questions:[{question:\"Was haben Sie in dieser \".concat(request.topic,\" Schulung gelernt?\"),options:['Grundlagen und Best Practices','Nur theoretisches Wissen','Veraltete Methoden','Nichts Neues'],correctAnswer:0,explanation:'Diese Schulung vermittelt sowohl theoretische Grundlagen als auch praktische Best Practices.'}],passingScore:70}:undefined};}// Validate the generated content\nif(!parsedContent.title||!parsedContent.description||!parsedContent.lessons){throw new Error('Invalid AI response structure');}return parsedContent;}catch(error){console.error('AI Training Generation Error:',error);throw new Error('Fehler bei der KI-Generierung. Bitte versuchen Sie es erneut.');}};/**\n * Generate a training certificate using AI\n */export const generateCertificateText=async(trainingTitle,userName,completionDate,score)=>{const prompt=\"\\nErstelle einen professionellen Zertifikatstext f\\xFCr eine abgeschlossene Unternehmensschulung.\\n\\n**Details:**\\n- Schulung: \".concat(trainingTitle,\"\\n- Teilnehmer: \").concat(userName,\"\\n- Abschlussdatum: \").concat(completionDate,\"\\n- Ergebnis: \").concat(score,\"%\\n\\n**Anforderungen:**\\n- Professioneller, offizieller Ton\\n- Deutsche Sprache\\n- Gratulation zur erfolgreichen Teilnahme\\n- Best\\xE4tigung der erworbenen Kenntnisse\\n- Verwende \\\"WorkyTime GmbH\\\" als ausstellendes Unternehmen\\n\\nErstelle einen strukturierten Zertifikatstext:\");try{const aiResponse=await getOpenAITextResponse([{role:'system',content:'Du erstellst professionelle Zertifikatstexte für Unternehmensschulungen in deutscher Sprache.'},{role:'user',content:prompt}],{model:'gpt-4o'});return aiResponse.content;}catch(error){console.error('Certificate Generation Error:',error);// Fallback certificate text\nreturn\"\\nZERTIFIKAT\\n\\nHiermit wird best\\xE4tigt, dass\\n\\n\".concat(userName,\"\\n\\ndie Schulung \\\"\").concat(trainingTitle,\"\\\" erfolgreich abgeschlossen hat.\\n\\nAbschlussdatum: \").concat(completionDate,\"\\nErgebnis: \").concat(score,\"%\\n\\nDiese Schulung vermittelte wichtige Kenntnisse und F\\xE4higkeiten f\\xFCr den beruflichen Alltag.\\n\\nWorkyTime GmbH\\nPersonalabteilung\\n    \").trim();}};/**\n * Generate email content for training notifications\n */export const generateTrainingNotificationEmail=async(type,userName,trainingTitle,additionalInfo)=>{let promptContext='';switch(type){case'NEW_TRAINING':promptContext='eine neue Schulung ist verfügbar';break;case'REMINDER':promptContext='Erinnerung an eine nicht abgeschlossene Schulung';break;case'DEADLINE_APPROACHING':promptContext='die Deadline einer Schulung nähert sich';break;case'COMPLETED':promptContext='Gratulation zur abgeschlossenen Schulung';break;case'FAILED':promptContext='Information über nicht bestandene Schulung';break;}const prompt=\"\\nErstelle eine professionelle E-Mail f\\xFCr \".concat(promptContext,\".\\n\\n**Details:**\\n- Empf\\xE4nger: \").concat(userName,\"\\n- Schulung: \").concat(trainingTitle,\"\\n- Zus\\xE4tzliche Info: \").concat(additionalInfo||'Keine',\"\\n- Absender: WorkyTime GmbH Personalabteilung\\n\\n**Anforderungen:**\\n- Professioneller aber freundlicher Ton\\n- Deutsche Sprache\\n- Passende Betreffzeile\\n- Strukturierte E-Mail mit klaren Handlungsaufforderungen\\n- Link zur WorkyTime App erw\\xE4hnen\\n\\nErstelle Betreff und E-Mail-Text:\");try{const aiResponse=await getOpenAITextResponse([{role:'system',content:'Du erstellst professionelle E-Mail-Benachrichtigungen für Unternehmensschulungen in deutscher Sprache.'},{role:'user',content:prompt}],{model:'gpt-4o'});const response=aiResponse.content;// Extract subject and body from response\nconst lines=response.split('\\n');const subjectLine=lines.find(line=>line.toLowerCase().includes('betreff:')||line.toLowerCase().includes('subject:'));const subject=subjectLine?subjectLine.replace(/betreff:|subject:/i,'').trim():\"WorkyTime: \".concat(trainingTitle);const bodyStart=response.indexOf('\\n\\n')>0?response.indexOf('\\n\\n')+2:0;const body=response.substring(bodyStart).trim();return{subject,body};}catch(error){console.error('Email Generation Error:',error);// Fallback email content\nconst fallbackSubjects={NEW_TRAINING:\"Neue Schulung verf\\xFCgbar: \".concat(trainingTitle),REMINDER:\"Erinnerung: Schulung \\\"\".concat(trainingTitle,\"\\\" noch nicht abgeschlossen\"),DEADLINE_APPROACHING:\"Deadline n\\xE4hert sich: \".concat(trainingTitle),COMPLETED:\"Gl\\xFCckwunsch! Schulung \\\"\".concat(trainingTitle,\"\\\" erfolgreich abgeschlossen\"),FAILED:\"Schulung \\\"\".concat(trainingTitle,\"\\\" - Wiederholung erforderlich\")};return{subject:fallbackSubjects[type],body:\"Hallo \".concat(userName,\",\\n\\nbez\\xFCglich der Schulung \\\"\").concat(trainingTitle,\"\\\" gibt es eine wichtige Information.\\n\\nBitte loggen Sie sich in die WorkyTime App ein, um weitere Details zu erfahren.\\n\\nBeste Gr\\xFC\\xDFe\\nIhr WorkyTime Team\")};}};","map":{"version":3,"names":["getOpenAITextResponse","generateTrainingContent","request","prompt","concat","topic","description","targetAudience","duration","difficulty","lessonCount","includeQuiz","aiResponse","role","content","model","response","parsedContent","jsonMatch","match","jsonString","JSON","parse","parseError","title","lessons","Array","from","length","_","i","substring","quiz","questions","question","options","correctAnswer","explanation","passingScore","undefined","finalQuiz","Error","error","console","generateCertificateText","trainingTitle","userName","completionDate","score","trim","generateTrainingNotificationEmail","type","additionalInfo","promptContext","lines","split","subjectLine","find","line","toLowerCase","includes","subject","replace","bodyStart","indexOf","body","fallbackSubjects","NEW_TRAINING","REMINDER","DEADLINE_APPROACHING","COMPLETED","FAILED"],"sources":["/Users/halteverbotsocialmacpro/Desktop/ars vivai/Worky Time/worky-time-web/src/api/training-ai.ts"],"sourcesContent":["import { getOpenAITextResponse } from './chat-service';\nimport { AIGenerationRequest, AIGeneratedContent } from '../types/training';\n\n/**\n * AI Training Content Generator\n * Uses OpenAI GPT-4o to generate training content, lessons, and quizzes\n */\n\nexport const generateTrainingContent = async (request: AIGenerationRequest): Promise<AIGeneratedContent> => {\n  const prompt = `\nDu bist ein Experte für Unternehmensschulungen und E-Learning. Erstelle eine strukturierte Schulung basierend auf folgenden Vorgaben:\n\n**Schulungsanfrage:**\n- Thema: ${request.topic}\n- Beschreibung: ${request.description}\n- Zielgruppe: ${request.targetAudience}\n- Dauer: ${request.duration} Minuten\n- Schwierigkeitsgrad: ${request.difficulty}\n- Anzahl Lektionen: ${request.lessonCount}\n- Quiz einschließen: ${request.includeQuiz ? 'Ja' : 'Nein'}\n\n**Aufgabe:**\nErstelle eine vollständige Schulung mit folgender Struktur:\n\n1. **Schulungstitel**: Prägnanter, professioneller Titel\n2. **Beschreibung**: Umfassende Beschreibung der Schulung (2-3 Sätze)\n3. **Lektionen**: ${request.lessonCount} Lektionen mit jeweils:\n   - Titel der Lektion\n   - Kurze Beschreibung (1-2 Sätze)\n   - Detaillierter Inhalt (strukturiert mit Überschriften, Aufzählungen, praktischen Beispielen)\n   ${request.includeQuiz ? '- Quiz mit 2-3 Multiple-Choice-Fragen pro Lektion\\n   - Jede Frage mit 4 Antwortmöglichkeiten, korrekter Antwort und Erklärung' : ''}\n\n${request.includeQuiz ? `4. **Abschlussprüfung**: \n   - 2-3 zusammenfassende Fragen über alle Lektionen\n   - Bestehensgrenze: 70%` : ''}\n\n**Wichtige Anforderungen:**\n- Inhalt muss praxisnah und unternehmensrelevant sein\n- Verwende klare, verständliche Sprache\n- Strukturiere den Inhalt logisch und aufbauend\n- Beispiele und Fallstudien einbauen\n- Bei ${request.difficulty === 'BEGINNER' ? 'Anfänger: Grundlagen erklären' : request.difficulty === 'INTERMEDIATE' ? 'Fortgeschritten: Vertiefte Kenntnisse vermitteln' : 'Experte: Spezialisiertes Fachwissen'}\n\n**Antwortformat:**\nAntworte ausschließlich in folgendem JSON-Format:\n\n{\n  \"title\": \"Schulungstitel\",\n  \"description\": \"Schulungsbeschreibung\",\n  \"lessons\": [\n    {\n      \"title\": \"Lektionstitel\",\n      \"description\": \"Lektionsbeschreibung\",\n      \"content\": \"Detaillierter Lektionsinhalt mit Markdown-Formatierung\",\n      ${request.includeQuiz ? `\"quiz\": {\n        \"questions\": [\n          {\n            \"question\": \"Frage?\",\n            \"options\": [\"Option A\", \"Option B\", \"Option C\", \"Option D\"],\n            \"correctAnswer\": 0,\n            \"explanation\": \"Erklärung der korrekten Antwort\"\n          }\n        ],\n        \"passingScore\": 80\n      }` : ''}\n    }\n  ]${request.includeQuiz ? `,\n  \"finalQuiz\": {\n    \"questions\": [\n      {\n        \"question\": \"Abschlussfrage?\",\n        \"options\": [\"Option A\", \"Option B\", \"Option C\", \"Option D\"],\n        \"correctAnswer\": 0,\n        \"explanation\": \"Erklärung\"\n      }\n    ],\n    \"passingScore\": 70\n  }` : ''}\n}\n\nErstelle jetzt die Schulung:`;\n\n  try {\n    const aiResponse = await getOpenAITextResponse([\n      {\n        role: 'system',\n        content: 'Du bist ein Experte für Unternehmensschulungen und E-Learning-Content. Erstelle hochwertige, strukturierte Schulungsinhalte in deutscher Sprache.'\n      },\n      {\n        role: 'user',\n        content: prompt\n      }\n    ], { model: 'gpt-4o' });\n    \n    const response = aiResponse.content;\n\n    // Parse the AI response\n    let parsedContent: AIGeneratedContent;\n    \n    try {\n      // Extract JSON from response (in case there's additional text)\n      const jsonMatch = response.match(/\\{[\\s\\S]*\\}/);\n      const jsonString = jsonMatch ? jsonMatch[0] : response;\n      parsedContent = JSON.parse(jsonString);\n    } catch (parseError) {\n      // Fallback: create structured content from text response\n      parsedContent = {\n        title: `${request.topic} - Umfassende Schulung`,\n        description: `Eine strukturierte Schulung zu ${request.topic} für ${request.targetAudience}. Diese Schulung vermittelt alle wichtigen Grundlagen und praktischen Anwendungen.`,\n        lessons: Array.from({ length: request.lessonCount }, (_, i) => ({\n          title: `Lektion ${i + 1}: ${request.topic} Grundlagen`,\n          description: `In dieser Lektion lernen Sie die wichtigsten Aspekte von ${request.topic} kennen.`,\n          content: `# Lektion ${i + 1}: ${request.topic}\\n\\n${response.substring(0, 500)}...`,\n          quiz: request.includeQuiz ? {\n            questions: [\n              {\n                question: `Was ist das wichtigste Prinzip bei ${request.topic}?`,\n                options: [\n                  'Sicherheit und Compliance',\n                  'Effizienz',\n                  'Kostenoptimierung',\n                  'Alle genannten Punkte'\n                ],\n                correctAnswer: 3,\n                explanation: `Bei ${request.topic} sind alle Aspekte wichtig, aber besonders die Balance zwischen Sicherheit, Effizienz und Kosten.`\n              }\n            ],\n            passingScore: 80\n          } : undefined\n        })),\n        finalQuiz: request.includeQuiz ? {\n          questions: [\n            {\n              question: `Was haben Sie in dieser ${request.topic} Schulung gelernt?`,\n              options: [\n                'Grundlagen und Best Practices',\n                'Nur theoretisches Wissen',\n                'Veraltete Methoden',\n                'Nichts Neues'\n              ],\n              correctAnswer: 0,\n              explanation: 'Diese Schulung vermittelt sowohl theoretische Grundlagen als auch praktische Best Practices.'\n            }\n          ],\n          passingScore: 70\n        } : undefined\n      };\n    }\n\n    // Validate the generated content\n    if (!parsedContent.title || !parsedContent.description || !parsedContent.lessons) {\n      throw new Error('Invalid AI response structure');\n    }\n\n    return parsedContent;\n  } catch (error) {\n    console.error('AI Training Generation Error:', error);\n    throw new Error('Fehler bei der KI-Generierung. Bitte versuchen Sie es erneut.');\n  }\n};\n\n/**\n * Generate a training certificate using AI\n */\nexport const generateCertificateText = async (\n  trainingTitle: string, \n  userName: string, \n  completionDate: string,\n  score: number\n): Promise<string> => {\n  const prompt = `\nErstelle einen professionellen Zertifikatstext für eine abgeschlossene Unternehmensschulung.\n\n**Details:**\n- Schulung: ${trainingTitle}\n- Teilnehmer: ${userName}\n- Abschlussdatum: ${completionDate}\n- Ergebnis: ${score}%\n\n**Anforderungen:**\n- Professioneller, offizieller Ton\n- Deutsche Sprache\n- Gratulation zur erfolgreichen Teilnahme\n- Bestätigung der erworbenen Kenntnisse\n- Verwende \"WorkyTime GmbH\" als ausstellendes Unternehmen\n\nErstelle einen strukturierten Zertifikatstext:`;\n\n  try {\n    const aiResponse = await getOpenAITextResponse([\n      {\n        role: 'system',\n        content: 'Du erstellst professionelle Zertifikatstexte für Unternehmensschulungen in deutscher Sprache.'\n      },\n      {\n        role: 'user',\n        content: prompt\n      }\n    ], { model: 'gpt-4o' });\n\n    return aiResponse.content;\n  } catch (error) {\n    console.error('Certificate Generation Error:', error);\n    \n    // Fallback certificate text\n    return `\nZERTIFIKAT\n\nHiermit wird bestätigt, dass\n\n${userName}\n\ndie Schulung \"${trainingTitle}\" erfolgreich abgeschlossen hat.\n\nAbschlussdatum: ${completionDate}\nErgebnis: ${score}%\n\nDiese Schulung vermittelte wichtige Kenntnisse und Fähigkeiten für den beruflichen Alltag.\n\nWorkyTime GmbH\nPersonalabteilung\n    `.trim();\n  }\n};\n\n/**\n * Generate email content for training notifications\n */\nexport const generateTrainingNotificationEmail = async (\n  type: 'NEW_TRAINING' | 'REMINDER' | 'DEADLINE_APPROACHING' | 'COMPLETED' | 'FAILED',\n  userName: string,\n  trainingTitle: string,\n  additionalInfo?: string\n): Promise<{ subject: string; body: string }> => {\n  let promptContext = '';\n  \n  switch (type) {\n    case 'NEW_TRAINING':\n      promptContext = 'eine neue Schulung ist verfügbar';\n      break;\n    case 'REMINDER':\n      promptContext = 'Erinnerung an eine nicht abgeschlossene Schulung';\n      break;\n    case 'DEADLINE_APPROACHING':\n      promptContext = 'die Deadline einer Schulung nähert sich';\n      break;\n    case 'COMPLETED':\n      promptContext = 'Gratulation zur abgeschlossenen Schulung';\n      break;\n    case 'FAILED':\n      promptContext = 'Information über nicht bestandene Schulung';\n      break;\n  }\n\n  const prompt = `\nErstelle eine professionelle E-Mail für ${promptContext}.\n\n**Details:**\n- Empfänger: ${userName}\n- Schulung: ${trainingTitle}\n- Zusätzliche Info: ${additionalInfo || 'Keine'}\n- Absender: WorkyTime GmbH Personalabteilung\n\n**Anforderungen:**\n- Professioneller aber freundlicher Ton\n- Deutsche Sprache\n- Passende Betreffzeile\n- Strukturierte E-Mail mit klaren Handlungsaufforderungen\n- Link zur WorkyTime App erwähnen\n\nErstelle Betreff und E-Mail-Text:`;\n\n  try {\n    const aiResponse = await getOpenAITextResponse([\n      {\n        role: 'system',\n        content: 'Du erstellst professionelle E-Mail-Benachrichtigungen für Unternehmensschulungen in deutscher Sprache.'\n      },\n      {\n        role: 'user',\n        content: prompt\n      }\n    ], { model: 'gpt-4o' });\n    \n    const response = aiResponse.content;\n\n    // Extract subject and body from response\n    const lines = response.split('\\n');\n    const subjectLine = lines.find((line: string) => line.toLowerCase().includes('betreff:') || line.toLowerCase().includes('subject:'));\n    const subject = subjectLine ? subjectLine.replace(/betreff:|subject:/i, '').trim() : `WorkyTime: ${trainingTitle}`;\n    \n    const bodyStart = response.indexOf('\\n\\n') > 0 ? response.indexOf('\\n\\n') + 2 : 0;\n    const body = response.substring(bodyStart).trim();\n\n    return { subject, body };\n  } catch (error) {\n    console.error('Email Generation Error:', error);\n    \n    // Fallback email content\n    const fallbackSubjects = {\n      NEW_TRAINING: `Neue Schulung verfügbar: ${trainingTitle}`,\n      REMINDER: `Erinnerung: Schulung \"${trainingTitle}\" noch nicht abgeschlossen`,\n      DEADLINE_APPROACHING: `Deadline nähert sich: ${trainingTitle}`,\n      COMPLETED: `Glückwunsch! Schulung \"${trainingTitle}\" erfolgreich abgeschlossen`,\n      FAILED: `Schulung \"${trainingTitle}\" - Wiederholung erforderlich`\n    };\n\n    return {\n      subject: fallbackSubjects[type],\n      body: `Hallo ${userName},\\n\\nbezüglich der Schulung \"${trainingTitle}\" gibt es eine wichtige Information.\\n\\nBitte loggen Sie sich in die WorkyTime App ein, um weitere Details zu erfahren.\\n\\nBeste Grüße\\nIhr WorkyTime Team`\n    };\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}