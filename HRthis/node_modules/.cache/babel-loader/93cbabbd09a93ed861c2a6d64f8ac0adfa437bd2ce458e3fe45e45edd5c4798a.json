{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useAuthStore}from'../state/auth';import{useLeavesStore}from'../state/leaves';import{useRemindersStore}from'../state/reminders';import{cn}from'../utils/cn';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const CalendarScreen=()=>{const{user}=useAuthStore();const{leaveRequests}=useLeavesStore();const{reminders,getUpcomingVacationAlerts}=useRemindersStore();const[currentDate,setCurrentDate]=useState(new Date());const[calendarDays,setCalendarDays]=useState([]);const[viewMode,setViewMode]=useState('both');// Mock data for team members (in real app, this would come from API)\nconst mockTeamLeaves=[...leaveRequests,{id:'10',userId:'2',startDate:'2024-12-16',endDate:'2024-12-20',comment:'Winterurlaub',status:'APPROVED',type:'VACATION',createdAt:'2024-11-01T10:00:00Z'},{id:'11',userId:'3',startDate:'2024-12-18',endDate:'2024-12-19',comment:'',status:'APPROVED',type:'SICK',createdAt:'2024-12-18T08:00:00Z'},{id:'12',userId:'4',startDate:'2024-12-09',endDate:'2024-12-13',comment:'Familienurlaub',status:'APPROVED',type:'VACATION',createdAt:'2024-11-15T10:00:00Z'},{id:'13',userId:'5',startDate:'2024-12-02',endDate:'2024-12-02',comment:'Erkältung',status:'APPROVED',type:'SICK',createdAt:'2024-12-02T07:30:00Z'},{id:'14',userId:'6',startDate:'2025-01-07',endDate:'2025-01-17',comment:'Neujahrsurlaub',status:'APPROVED',type:'VACATION',createdAt:'2024-11-20T14:00:00Z'},{id:'15',userId:'3',startDate:'2024-12-27',endDate:'2024-12-31',comment:'Jahresende',status:'APPROVED',type:'VACATION',createdAt:'2024-11-25T09:15:00Z'}];/**\n   * Gets the display name for a user ID\n   * @param userId - The user ID to get the name for\n   * @returns The display name or 'Unbekannt' if not found\n   */const getUserName=userId=>{const names={'1':'Max M.','2':'Anna A.','3':'Tom K.','4':'Lisa S.','5':'Julia B.','6':'Marco L.'};return names[userId]||'Unbekannt';};/**\n   * Generates mock time records for team members for the current month\n   * Creates realistic working hours patterns for each team member,\n   * excluding weekends and leave periods\n   * @returns Array of mock time records for the current month\n   */const generateMockTeamTimeRecords=()=>{const records=[];const endOfMonth=new Date(currentDate.getFullYear(),currentDate.getMonth()+1,0);// Generate records for all team members\nconst teamUserIds=['1','2','3','4','5','6'];for(let userId of teamUserIds){for(let day=1;day<=endOfMonth.getDate();day++){const date=new Date(currentDate.getFullYear(),currentDate.getMonth(),day);// Skip weekends\nif(date.getDay()===0||date.getDay()===6)continue;// Skip if user is on leave\nconst dateString=date.toISOString().split('T')[0];const isOnLeave=mockTeamLeaves.some(leave=>{const startDate=new Date(leave.startDate);const endDate=new Date(leave.endDate);return date>=startDate&&date<=endDate&&leave.userId===userId&&leave.status==='APPROVED';});if(isOnLeave)continue;// Generate realistic working hours\nconst variations={'1':{baseStart:8,baseEnd:17},// Max - regular hours\n'2':{baseStart:9,baseEnd:18},// Anna - later start\n'3':{baseStart:7,baseEnd:16},// Tom - early bird\n'4':{baseStart:8.5,baseEnd:17.5},// Lisa - flexible\n'5':{baseStart:9,baseEnd:17},// Julia - standard\n'6':{baseStart:8,baseEnd:16}// Marco - early finish\n};const userPattern=variations[userId]||variations['1'];const startHour=userPattern.baseStart+(Math.random()*0.5-0.25);// ±15 min variation\nconst endHour=userPattern.baseEnd+(Math.random()*0.5-0.25);const timeIn=new Date(date);timeIn.setHours(Math.floor(startHour),Math.floor(startHour%1*60));const timeOut=new Date(date);timeOut.setHours(Math.floor(endHour),Math.floor(endHour%1*60));const breakMinutes=30+Math.floor(Math.random()*30);// 30-60 min break\nconst totalHours=(timeOut.getTime()-timeIn.getTime())/(1000*60*60)-breakMinutes/60;records.push({id:\"\".concat(userId,\"-\").concat(dateString),userId,date:dateString,timeIn:timeIn.toTimeString().split(' ')[0].substring(0,5),timeOut:timeOut.toTimeString().split(' ')[0].substring(0,5),breakMinutes,totalHours:Math.round(totalHours*100)/100});}}return records;};useEffect(()=>{const generateCalendar=()=>{const year=currentDate.getFullYear();const month=currentDate.getMonth();// First day of the month\nconst firstDay=new Date(year,month,1);// Start from Monday of the week containing the first day\nconst startDate=new Date(firstDay);const dayOfWeek=firstDay.getDay();const daysToSubtract=dayOfWeek===0?6:dayOfWeek-1;startDate.setDate(firstDay.getDate()-daysToSubtract);// Generate mock team time records\nconst teamTimeRecords=generateMockTeamTimeRecords();// Generate 42 days (6 weeks)\nconst days=[];const today=new Date();for(let i=0;i<42;i++){const date=new Date(startDate);date.setDate(startDate.getDate()+i);const isCurrentMonth=date.getMonth()===month;const isToday=date.toDateString()===today.toDateString();// Find leaves for this date\nconst dateString=date.toISOString().split('T')[0];const dayLeaves=mockTeamLeaves.filter(leave=>{const startDate=new Date(leave.startDate);const endDate=new Date(leave.endDate);const currentDate=new Date(dateString);return currentDate>=startDate&&currentDate<=endDate&&leave.status==='APPROVED';});// Find time records for this date\nconst dayTimeRecords=teamTimeRecords.filter(record=>record.date===dateString);// Find reminders for this date\nconst dayReminders=reminders.filter(reminder=>reminder.reminderDate===dateString&&reminder.isActive);days.push({date,isCurrentMonth,isToday,leaves:dayLeaves,timeRecords:dayTimeRecords,reminders:dayReminders});}setCalendarDays(days);};generateCalendar();},[currentDate,mockTeamLeaves,reminders]);const navigateMonth=direction=>{const newDate=new Date(currentDate);if(direction==='prev'){newDate.setMonth(currentDate.getMonth()-1);}else{newDate.setMonth(currentDate.getMonth()+1);}setCurrentDate(newDate);};const getMonthYearText=()=>{return currentDate.toLocaleDateString('de-DE',{month:'long',year:'numeric'});};const getAverageHours=timeRecords=>{if(timeRecords.length===0)return 0;const totalHours=timeRecords.reduce((sum,record)=>sum+record.totalHours,0);return totalHours/timeRecords.length;};const getHoursColor=avgHours=>{if(avgHours===0)return'text-gray-300';if(avgHours<7)return'text-red-500';if(avgHours>9)return'text-orange-500';return'text-green-500';};const weekdays=['Mo','Di','Mi','Do','Fr','Sa','So'];return/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 bg-gray-50 min-h-screen\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 px-4 py-6 overflow-y-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold text-gray-900\",children:\"Team Kalender\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[((user===null||user===void 0?void 0:user.role)==='ADMIN'||(user===null||user===void 0?void 0:user.role)==='SUPERADMIN')&&/*#__PURE__*/_jsx(\"button\",{className:\"bg-orange-500 px-3 py-2 rounded-lg hover:bg-orange-600 transition-colors\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-white text-sm font-medium mr-1\",children:\"\\uD83D\\uDD14\"}),user&&getUpcomingVacationAlerts(user.id).length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-600 rounded-full w-4 h-4 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white text-xs font-bold\",children:getUpcomingVacationAlerts(user.id).length})})]})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigateMonth('prev'),className:\"w-10 h-10 flex items-center justify-center bg-white rounded-lg shadow-sm hover:bg-gray-50 transition-colors\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-lg text-gray-600\",children:\"\\u2039\"})}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold text-gray-900 min-w-32 text-center\",children:getMonthYearText()}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigateMonth('next'),className:\"w-10 h-10 flex items-center justify-center bg-white rounded-lg shadow-sm hover:bg-gray-50 transition-colors\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-lg text-gray-600\",children:\"\\u203A\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex bg-white rounded-lg p-1 mb-4 shadow-sm\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setViewMode('leaves'),className:cn(\"flex-1 py-2 px-3 rounded-md transition-colors\",viewMode==='leaves'?\"bg-blue-500 text-white\":\"bg-transparent text-gray-700 hover:bg-gray-100\"),children:/*#__PURE__*/_jsx(\"span\",{className:\"text-center font-medium text-xs\",children:\"Abwesenheit\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setViewMode('hours'),className:cn(\"flex-1 py-2 px-3 rounded-md transition-colors\",viewMode==='hours'?\"bg-blue-500 text-white\":\"bg-transparent text-gray-700 hover:bg-gray-100\"),children:/*#__PURE__*/_jsx(\"span\",{className:\"text-center font-medium text-xs\",children:\"Stunden\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setViewMode('both'),className:cn(\"flex-1 py-2 px-3 rounded-md transition-colors\",viewMode==='both'?\"bg-blue-500 text-white\":\"bg-transparent text-gray-700 hover:bg-gray-100\"),children:/*#__PURE__*/_jsx(\"span\",{className:\"text-center font-medium text-xs\",children:\"Beide\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl p-4 mb-4 shadow-sm\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-semibold text-gray-900 mb-2\",children:\"Legende\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-4\",children:[(viewMode==='leaves'||viewMode==='both')&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-blue-500 rounded-full mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"Urlaub\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-red-500 rounded-full mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"Krankheit\"})]})]}),(viewMode==='hours'||viewMode==='both')&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-green-500 font-bold mr-1\",children:\"8.0h\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"Normal\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-red-500 font-bold mr-1\",children:\"6.5h\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"Wenig\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-orange-500 font-bold mr-1\",children:\"9.5h\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"Viel\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-orange-500 rounded-full mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"Erinnerung\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl p-4 shadow-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-7 mb-2\",children:weekdays.map(day=>/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center py-2\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-semibold text-gray-500\",children:day})},day))}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-7 gap-0\",children:calendarDays.map((day,index)=>/*#__PURE__*/_jsx(\"button\",{className:cn(\"aspect-square border-b border-r border-gray-100 p-1 text-left hover:bg-gray-50 transition-colors\",!day.isCurrentMonth&&\"bg-gray-50\"),onClick:()=>{if(day.leaves.length>0){// Could show detailed view of leaves for this day\n}},children:/*#__PURE__*/_jsxs(\"div\",{className:\"h-full flex flex-col\",children:[/*#__PURE__*/_jsx(\"span\",{className:cn(\"text-sm font-medium mb-1\",!day.isCurrentMonth&&\"text-gray-400\",day.isToday&&\"text-blue-600 font-bold\"),children:day.date.getDate()}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col justify-start text-left\",children:[(viewMode==='leaves'||viewMode==='both')&&day.leaves.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-1\",children:[day.leaves.slice(0,viewMode==='both'?1:2).map((leave,leaveIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"mb-0.5\",children:/*#__PURE__*/_jsx(\"div\",{className:cn(\"px-1 py-0.5 rounded-sm\",leave.type==='VACATION'?\"bg-blue-100\":\"bg-red-100\"),children:/*#__PURE__*/_jsx(\"span\",{className:cn(\"text-xs font-medium\",leave.type==='VACATION'?\"text-blue-700\":\"text-red-700\"),children:getUserName(leave.userId)})})},leaveIndex)),day.leaves.length>(viewMode==='both'?1:2)&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[\"+\",day.leaves.length-(viewMode==='both'?1:2)]})]}),(viewMode==='hours'||viewMode==='both')&&day.timeRecords.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-0.5\",children:[viewMode==='hours'?// Show individual hours in hours-only mode\nday.timeRecords.slice(0,3).map((record,recordIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:cn(\"text-xs font-bold mr-1\",getHoursColor(record.totalHours)),children:[record.totalHours.toFixed(1),\"h\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500 flex-1\",children:getUserName(record.userId)})]},recordIndex)):/*#__PURE__*/// Show average in combined mode\n_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:cn(\"text-xs font-bold mr-1\",getHoursColor(getAverageHours(day.timeRecords))),children:[\"\\u2300\",getAverageHours(day.timeRecords).toFixed(1),\"h\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[\"(\",day.timeRecords.length,\" MA)\"]})]}),viewMode==='hours'&&day.timeRecords.length>3&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[\"+\",day.timeRecords.length-3]})]}),day.reminders.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-1 right-1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-orange-500 rounded-full\"})}),day.isCurrentMonth&&day.timeRecords.length===0&&day.leaves.length===0&&day.date.getDay()!==0&&day.date.getDay()!==6&&/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-300\",children:\"-\"})]})]})},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl p-4 mt-4 shadow-sm\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-3\",children:[\"\\xDCbersicht \",getMonthYearText()]}),(viewMode==='leaves'||viewMode==='both')&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-700 mb-2\",children:\"Abwesenheiten\"}),mockTeamLeaves.filter(leave=>{const leaveStart=new Date(leave.startDate);return leaveStart.getMonth()===currentDate.getMonth()&&leaveStart.getFullYear()===currentDate.getFullYear()&&leave.status==='APPROVED';}).map(leave=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between py-2 border-b border-gray-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl mr-3\",children:leave.type==='VACATION'?'🏖️':'🏥'}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-medium text-gray-900\",children:getUserName(leave.userId)}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[new Date(leave.startDate).toLocaleDateString('de-DE'),\" - \",new Date(leave.endDate).toLocaleDateString('de-DE')]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:cn(\"px-2 py-1 rounded-full\",leave.type==='VACATION'?\"bg-blue-100\":\"bg-red-100\"),children:/*#__PURE__*/_jsx(\"span\",{className:cn(\"text-xs font-medium\",leave.type==='VACATION'?\"text-blue-700\":\"text-red-700\"),children:leave.type==='VACATION'?'Urlaub':'Krank'})})]},leave.id))]}),(viewMode==='hours'||viewMode==='both')&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-700 mb-2\",children:\"Arbeitszeiten-Statistik\"}),(()=>{const monthRecords=calendarDays.flatMap(day=>day.timeRecords);const userStats=['1','2','3','4','5','6'].map(userId=>{const userRecords=monthRecords.filter(r=>r.userId===userId);const totalHours=userRecords.reduce((sum,r)=>sum+r.totalHours,0);const avgHours=userRecords.length>0?totalHours/userRecords.length:0;const workDays=userRecords.length;return{userId,totalHours,avgHours,workDays,name:getUserName(userId)};}).filter(stat=>stat.workDays>0);return userStats.map(stat=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between py-2 border-b border-gray-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl mr-3\",children:\"\\u23F0\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-medium text-gray-900\",children:stat.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[stat.workDays,\" Arbeitstage\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsxs(\"p\",{className:cn(\"font-bold text-sm\",getHoursColor(stat.avgHours)),children:[\"\\u2300 \",stat.avgHours.toFixed(1),\"h\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500\",children:[stat.totalHours.toFixed(1),\"h gesamt\"]})]})]},stat.userId));})()]})]})]})});};","map":{"version":3,"names":["React","useState","useEffect","useAuthStore","useLeavesStore","useRemindersStore","cn","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CalendarScreen","user","leaveRequests","reminders","getUpcomingVacationAlerts","currentDate","setCurrentDate","Date","calendarDays","setCalendarDays","viewMode","setViewMode","mockTeamLeaves","id","userId","startDate","endDate","comment","status","type","createdAt","getUserName","names","generateMockTeamTimeRecords","records","endOfMonth","getFullYear","getMonth","teamUserIds","day","getDate","date","getDay","dateString","toISOString","split","isOnLeave","some","leave","variations","baseStart","baseEnd","userPattern","startHour","Math","random","endHour","timeIn","setHours","floor","timeOut","breakMinutes","totalHours","getTime","push","concat","toTimeString","substring","round","generateCalendar","year","month","firstDay","dayOfWeek","daysToSubtract","setDate","teamTimeRecords","days","today","i","isCurrentMonth","isToday","toDateString","dayLeaves","filter","dayTimeRecords","record","dayReminders","reminder","reminderDate","isActive","leaves","timeRecords","navigateMonth","direction","newDate","setMonth","getMonthYearText","toLocaleDateString","getAverageHours","length","reduce","sum","getHoursColor","avgHours","weekdays","className","children","role","onClick","map","index","slice","leaveIndex","recordIndex","toFixed","leaveStart","monthRecords","flatMap","userStats","userRecords","r","workDays","name","stat"],"sources":["/Users/halteverbotsocialmacpro/Desktop/ars vivai/Worky Time/worky-time-web/src/screens/CalendarScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../state/auth';\nimport { useLeavesStore } from '../state/leaves';\nimport { useTimeRecordsStore } from '../state/timeRecords';\nimport { useRemindersStore } from '../state/reminders';\nimport { LeaveRequest, TimeRecord } from '../types';\nimport { VacationReminder } from '../types/reminders';\nimport { cn } from '../utils/cn';\n\ninterface CalendarDay {\n  date: Date;\n  isCurrentMonth: boolean;\n  isToday: boolean;\n  leaves: LeaveRequest[];\n  timeRecords: TimeRecord[];\n  reminders: VacationReminder[];\n}\n\nexport const CalendarScreen = () => {\n  const { user } = useAuthStore();\n  const { leaveRequests } = useLeavesStore();\n  const { reminders, getUpcomingVacationAlerts } = useRemindersStore();\n  \n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [calendarDays, setCalendarDays] = useState<CalendarDay[]>([]);\n  const [viewMode, setViewMode] = useState<'leaves' | 'hours' | 'both'>('both');\n\n  // Mock data for team members (in real app, this would come from API)\n  const mockTeamLeaves: LeaveRequest[] = [\n    ...leaveRequests,\n    {\n      id: '10',\n      userId: '2',\n      startDate: '2024-12-16',\n      endDate: '2024-12-20',\n      comment: 'Winterurlaub',\n      status: 'APPROVED',\n      type: 'VACATION',\n      createdAt: '2024-11-01T10:00:00Z'\n    },\n    {\n      id: '11',\n      userId: '3',\n      startDate: '2024-12-18',\n      endDate: '2024-12-19',\n      comment: '',\n      status: 'APPROVED',\n      type: 'SICK',\n      createdAt: '2024-12-18T08:00:00Z'\n    },\n    {\n      id: '12',\n      userId: '4',\n      startDate: '2024-12-09',\n      endDate: '2024-12-13',\n      comment: 'Familienurlaub',\n      status: 'APPROVED',\n      type: 'VACATION',\n      createdAt: '2024-11-15T10:00:00Z'\n    },\n    {\n      id: '13',\n      userId: '5',\n      startDate: '2024-12-02',\n      endDate: '2024-12-02',\n      comment: 'Erkältung',\n      status: 'APPROVED',\n      type: 'SICK',\n      createdAt: '2024-12-02T07:30:00Z'\n    },\n    {\n      id: '14',\n      userId: '6',\n      startDate: '2025-01-07',\n      endDate: '2025-01-17',\n      comment: 'Neujahrsurlaub',\n      status: 'APPROVED',\n      type: 'VACATION',\n      createdAt: '2024-11-20T14:00:00Z'\n    },\n    {\n      id: '15',\n      userId: '3',\n      startDate: '2024-12-27',\n      endDate: '2024-12-31',\n      comment: 'Jahresende',\n      status: 'APPROVED',\n      type: 'VACATION',\n      createdAt: '2024-11-25T09:15:00Z'\n    }\n  ];\n\n  /**\n   * Gets the display name for a user ID\n   * @param userId - The user ID to get the name for\n   * @returns The display name or 'Unbekannt' if not found\n   */\n  const getUserName = (userId: string): string => {\n    const names: { [key: string]: string } = {\n      '1': 'Max M.',\n      '2': 'Anna A.',\n      '3': 'Tom K.',\n      '4': 'Lisa S.',\n      '5': 'Julia B.',\n      '6': 'Marco L.'\n    };\n    return names[userId] || 'Unbekannt';\n  };\n\n  /**\n   * Generates mock time records for team members for the current month\n   * Creates realistic working hours patterns for each team member,\n   * excluding weekends and leave periods\n   * @returns Array of mock time records for the current month\n   */\n  const generateMockTeamTimeRecords = (): TimeRecord[] => {\n    const records: TimeRecord[] = [];\n    const endOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\n    \n    // Generate records for all team members\n    const teamUserIds = ['1', '2', '3', '4', '5', '6'];\n    \n    for (let userId of teamUserIds) {\n      for (let day = 1; day <= endOfMonth.getDate(); day++) {\n        const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), day);\n        \n        // Skip weekends\n        if (date.getDay() === 0 || date.getDay() === 6) continue;\n        \n        // Skip if user is on leave\n        const dateString = date.toISOString().split('T')[0];\n        const isOnLeave = mockTeamLeaves.some(leave => {\n          const startDate = new Date(leave.startDate);\n          const endDate = new Date(leave.endDate);\n          return date >= startDate && date <= endDate && leave.userId === userId && leave.status === 'APPROVED';\n        });\n        \n        if (isOnLeave) continue;\n        \n        // Generate realistic working hours\n        const variations = {\n          '1': { baseStart: 8, baseEnd: 17 },   // Max - regular hours\n          '2': { baseStart: 9, baseEnd: 18 },   // Anna - later start\n          '3': { baseStart: 7, baseEnd: 16 },   // Tom - early bird\n          '4': { baseStart: 8.5, baseEnd: 17.5 }, // Lisa - flexible\n          '5': { baseStart: 9, baseEnd: 17 },   // Julia - standard\n          '6': { baseStart: 8, baseEnd: 16 }    // Marco - early finish\n        };\n        \n        const userPattern = variations[userId as keyof typeof variations] || variations['1'];\n        \n        const startHour = userPattern.baseStart + (Math.random() * 0.5 - 0.25); // ±15 min variation\n        const endHour = userPattern.baseEnd + (Math.random() * 0.5 - 0.25);\n        \n        const timeIn = new Date(date);\n        timeIn.setHours(Math.floor(startHour), Math.floor((startHour % 1) * 60));\n        \n        const timeOut = new Date(date);\n        timeOut.setHours(Math.floor(endHour), Math.floor((endHour % 1) * 60));\n        \n        const breakMinutes = 30 + Math.floor(Math.random() * 30); // 30-60 min break\n        const totalHours = (timeOut.getTime() - timeIn.getTime()) / (1000 * 60 * 60) - (breakMinutes / 60);\n        \n        records.push({\n          id: `${userId}-${dateString}`,\n          userId,\n          date: dateString,\n          timeIn: timeIn.toTimeString().split(' ')[0].substring(0, 5),\n          timeOut: timeOut.toTimeString().split(' ')[0].substring(0, 5),\n          breakMinutes,\n          totalHours: Math.round(totalHours * 100) / 100\n        });\n      }\n    }\n    \n    return records;\n  };\n\n  useEffect(() => {\n    const generateCalendar = () => {\n      const year = currentDate.getFullYear();\n      const month = currentDate.getMonth();\n      \n      // First day of the month\n      const firstDay = new Date(year, month, 1);\n      \n      // Start from Monday of the week containing the first day\n      const startDate = new Date(firstDay);\n      const dayOfWeek = firstDay.getDay();\n      const daysToSubtract = dayOfWeek === 0 ? 6 : dayOfWeek - 1;\n      startDate.setDate(firstDay.getDate() - daysToSubtract);\n      \n      // Generate mock team time records\n      const teamTimeRecords = generateMockTeamTimeRecords();\n      \n      // Generate 42 days (6 weeks)\n      const days: CalendarDay[] = [];\n      const today = new Date();\n      \n      for (let i = 0; i < 42; i++) {\n        const date = new Date(startDate);\n        date.setDate(startDate.getDate() + i);\n        \n        const isCurrentMonth = date.getMonth() === month;\n        const isToday = date.toDateString() === today.toDateString();\n        \n        // Find leaves for this date\n        const dateString = date.toISOString().split('T')[0];\n        const dayLeaves = mockTeamLeaves.filter(leave => {\n          const startDate = new Date(leave.startDate);\n          const endDate = new Date(leave.endDate);\n          const currentDate = new Date(dateString);\n          \n          return currentDate >= startDate && currentDate <= endDate && leave.status === 'APPROVED';\n        });\n        \n        // Find time records for this date\n        const dayTimeRecords = teamTimeRecords.filter(record => record.date === dateString);\n        \n        // Find reminders for this date\n        const dayReminders = reminders.filter(reminder => reminder.reminderDate === dateString && reminder.isActive);\n        \n        days.push({\n          date,\n          isCurrentMonth,\n          isToday,\n          leaves: dayLeaves,\n          timeRecords: dayTimeRecords,\n          reminders: dayReminders\n        });\n      }\n      \n      setCalendarDays(days);\n    };\n    \n    generateCalendar();\n  }, [currentDate, mockTeamLeaves, reminders]);\n\n  const navigateMonth = (direction: 'prev' | 'next') => {\n    const newDate = new Date(currentDate);\n    if (direction === 'prev') {\n      newDate.setMonth(currentDate.getMonth() - 1);\n    } else {\n      newDate.setMonth(currentDate.getMonth() + 1);\n    }\n    setCurrentDate(newDate);\n  };\n\n  const getMonthYearText = () => {\n    return currentDate.toLocaleDateString('de-DE', {\n      month: 'long',\n      year: 'numeric'\n    });\n  };\n\n  const getAverageHours = (timeRecords: TimeRecord[]) => {\n    if (timeRecords.length === 0) return 0;\n    const totalHours = timeRecords.reduce((sum, record) => sum + record.totalHours, 0);\n    return totalHours / timeRecords.length;\n  };\n\n  const getHoursColor = (avgHours: number) => {\n    if (avgHours === 0) return 'text-gray-300';\n    if (avgHours < 7) return 'text-red-500';\n    if (avgHours > 9) return 'text-orange-500';\n    return 'text-green-500';\n  };\n\n  const weekdays = ['Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa', 'So'];\n\n  return (\n    <div className=\"flex-1 bg-gray-50 min-h-screen\">\n      <div className=\"flex-1 px-4 py-6 overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <h1 className=\"text-xl font-bold text-gray-900\">\n            Team Kalender\n          </h1>\n          <div className=\"flex items-center space-x-4\">\n            {(user?.role === 'ADMIN' || user?.role === 'SUPERADMIN') && (\n              <button className=\"bg-orange-500 px-3 py-2 rounded-lg hover:bg-orange-600 transition-colors\">\n                <div className=\"flex items-center\">\n                  <span className=\"text-white text-sm font-medium mr-1\">🔔</span>\n                  {user && getUpcomingVacationAlerts(user.id).length > 0 && (\n                    <div className=\"bg-red-600 rounded-full w-4 h-4 flex items-center justify-center\">\n                      <span className=\"text-white text-xs font-bold\">\n                        {getUpcomingVacationAlerts(user.id).length}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </button>\n            )}\n            <button \n              onClick={() => navigateMonth('prev')}\n              className=\"w-10 h-10 flex items-center justify-center bg-white rounded-lg shadow-sm hover:bg-gray-50 transition-colors\"\n            >\n              <span className=\"text-lg text-gray-600\">‹</span>\n            </button>\n            <h2 className=\"text-lg font-semibold text-gray-900 min-w-32 text-center\">\n              {getMonthYearText()}\n            </h2>\n            <button \n              onClick={() => navigateMonth('next')}\n              className=\"w-10 h-10 flex items-center justify-center bg-white rounded-lg shadow-sm hover:bg-gray-50 transition-colors\"\n            >\n              <span className=\"text-lg text-gray-600\">›</span>\n            </button>\n          </div>\n        </div>\n\n        {/* View Mode Toggle */}\n        <div className=\"flex bg-white rounded-lg p-1 mb-4 shadow-sm\">\n          <button\n            onClick={() => setViewMode('leaves')}\n            className={cn(\n              \"flex-1 py-2 px-3 rounded-md transition-colors\",\n              viewMode === 'leaves' ? \"bg-blue-500 text-white\" : \"bg-transparent text-gray-700 hover:bg-gray-100\"\n            )}\n          >\n            <span className=\"text-center font-medium text-xs\">\n              Abwesenheit\n            </span>\n          </button>\n          <button\n            onClick={() => setViewMode('hours')}\n            className={cn(\n              \"flex-1 py-2 px-3 rounded-md transition-colors\",\n              viewMode === 'hours' ? \"bg-blue-500 text-white\" : \"bg-transparent text-gray-700 hover:bg-gray-100\"\n            )}\n          >\n            <span className=\"text-center font-medium text-xs\">\n              Stunden\n            </span>\n          </button>\n          <button\n            onClick={() => setViewMode('both')}\n            className={cn(\n              \"flex-1 py-2 px-3 rounded-md transition-colors\",\n              viewMode === 'both' ? \"bg-blue-500 text-white\" : \"bg-transparent text-gray-700 hover:bg-gray-100\"\n            )}\n          >\n            <span className=\"text-center font-medium text-xs\">\n              Beide\n            </span>\n          </button>\n        </div>\n\n        {/* Legend */}\n        <div className=\"bg-white rounded-xl p-4 mb-4 shadow-sm\">\n          <h3 className=\"text-sm font-semibold text-gray-900 mb-2\">Legende</h3>\n          <div className=\"flex flex-wrap gap-4\">\n            {(viewMode === 'leaves' || viewMode === 'both') && (\n              <>\n                <div className=\"flex items-center\">\n                  <div className=\"w-3 h-3 bg-blue-500 rounded-full mr-2\" />\n                  <span className=\"text-sm text-gray-600\">Urlaub</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"w-3 h-3 bg-red-500 rounded-full mr-2\" />\n                  <span className=\"text-sm text-gray-600\">Krankheit</span>\n                </div>\n              </>\n            )}\n            {(viewMode === 'hours' || viewMode === 'both') && (\n              <>\n                <div className=\"flex items-center\">\n                  <span className=\"text-sm text-green-500 font-bold mr-1\">8.0h</span>\n                  <span className=\"text-sm text-gray-600\">Normal</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <span className=\"text-sm text-red-500 font-bold mr-1\">6.5h</span>\n                  <span className=\"text-sm text-gray-600\">Wenig</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <span className=\"text-sm text-orange-500 font-bold mr-1\">9.5h</span>\n                  <span className=\"text-sm text-gray-600\">Viel</span>\n                </div>\n              </>\n            )}\n            <div className=\"flex items-center\">\n              <div className=\"w-3 h-3 bg-orange-500 rounded-full mr-2\" />\n              <span className=\"text-sm text-gray-600\">Erinnerung</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Calendar */}\n        <div className=\"bg-white rounded-xl p-4 shadow-sm\">\n          {/* Weekday headers */}\n          <div className=\"grid grid-cols-7 mb-2\">\n            {weekdays.map((day) => (\n              <div key={day} className=\"flex items-center justify-center py-2\">\n                <span className=\"text-sm font-semibold text-gray-500\">{day}</span>\n              </div>\n            ))}\n          </div>\n\n          {/* Calendar grid */}\n          <div className=\"grid grid-cols-7 gap-0\">\n            {calendarDays.map((day, index) => (\n              <button\n                key={index}\n                className={cn(\n                  \"aspect-square border-b border-r border-gray-100 p-1 text-left hover:bg-gray-50 transition-colors\",\n                  !day.isCurrentMonth && \"bg-gray-50\"\n                )}\n                onClick={() => {\n                  if (day.leaves.length > 0) {\n                    // Could show detailed view of leaves for this day\n                  }\n                }}\n              >\n                <div className=\"h-full flex flex-col\">\n                  <span className={cn(\n                    \"text-sm font-medium mb-1\",\n                    !day.isCurrentMonth && \"text-gray-400\",\n                    day.isToday && \"text-blue-600 font-bold\"\n                  )}>\n                    {day.date.getDate()}\n                  </span>\n                  \n                  {/* Content based on view mode */}\n                  <div className=\"flex-1 flex flex-col justify-start text-left\">\n                    {/* Leave indicators */}\n                    {(viewMode === 'leaves' || viewMode === 'both') && day.leaves.length > 0 && (\n                      <div className=\"mb-1\">\n                        {day.leaves.slice(0, viewMode === 'both' ? 1 : 2).map((leave, leaveIndex) => (\n                          <div key={leaveIndex} className=\"mb-0.5\">\n                            <div className={cn(\n                              \"px-1 py-0.5 rounded-sm\",\n                              leave.type === 'VACATION' ? \"bg-blue-100\" : \"bg-red-100\"\n                            )}>\n                              <span className={cn(\n                                \"text-xs font-medium\",\n                                leave.type === 'VACATION' ? \"text-blue-700\" : \"text-red-700\"\n                              )}>\n                                {getUserName(leave.userId)}\n                              </span>\n                            </div>\n                          </div>\n                        ))}\n                        {day.leaves.length > (viewMode === 'both' ? 1 : 2) && (\n                          <span className=\"text-xs text-gray-500\">\n                            +{day.leaves.length - (viewMode === 'both' ? 1 : 2)}\n                          </span>\n                        )}\n                      </div>\n                    )}\n                    \n                    {/* Hours indicators */}\n                    {(viewMode === 'hours' || viewMode === 'both') && day.timeRecords.length > 0 && (\n                      <div className=\"space-y-0.5\">\n                        {viewMode === 'hours' ? (\n                          // Show individual hours in hours-only mode\n                          day.timeRecords.slice(0, 3).map((record, recordIndex) => (\n                            <div key={recordIndex} className=\"flex items-center\">\n                              <span className={cn(\n                                \"text-xs font-bold mr-1\",\n                                getHoursColor(record.totalHours)\n                              )}>\n                                {record.totalHours.toFixed(1)}h\n                              </span>\n                              <span className=\"text-xs text-gray-500 flex-1\">\n                                {getUserName(record.userId)}\n                              </span>\n                            </div>\n                          ))\n                        ) : (\n                          // Show average in combined mode\n                          <div className=\"flex items-center\">\n                            <span className={cn(\n                              \"text-xs font-bold mr-1\",\n                              getHoursColor(getAverageHours(day.timeRecords))\n                            )}>\n                              ⌀{getAverageHours(day.timeRecords).toFixed(1)}h\n                            </span>\n                            <span className=\"text-xs text-gray-500\">\n                              ({day.timeRecords.length} MA)\n                            </span>\n                          </div>\n                        )}\n                        {viewMode === 'hours' && day.timeRecords.length > 3 && (\n                          <span className=\"text-xs text-gray-500\">\n                            +{day.timeRecords.length - 3}\n                          </span>\n                        )}\n                      </div>\n                    )}\n                    \n                    {/* Reminder indicators */}\n                    {day.reminders.length > 0 && (\n                      <div className=\"absolute top-1 right-1\">\n                        <div className=\"w-2 h-2 bg-orange-500 rounded-full\" />\n                      </div>\n                    )}\n                    \n                    {/* No data indicator */}\n                    {day.isCurrentMonth && day.timeRecords.length === 0 && day.leaves.length === 0 && \n                     (day.date.getDay() !== 0 && day.date.getDay() !== 6) && (\n                      <span className=\"text-xs text-gray-300\">-</span>\n                    )}\n                  </div>\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Current Month Summary */}\n        <div className=\"bg-white rounded-xl p-4 mt-4 shadow-sm\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">\n            Übersicht {getMonthYearText()}\n          </h3>\n          \n          {/* Leaves Summary */}\n          {(viewMode === 'leaves' || viewMode === 'both') && (\n            <div className=\"mb-4\">\n              <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Abwesenheiten</h4>\n              {mockTeamLeaves\n                .filter(leave => {\n                  const leaveStart = new Date(leave.startDate);\n                  return leaveStart.getMonth() === currentDate.getMonth() && \n                         leaveStart.getFullYear() === currentDate.getFullYear() &&\n                         leave.status === 'APPROVED';\n                })\n                .map((leave) => (\n                  <div key={leave.id} className=\"flex items-center justify-between py-2 border-b border-gray-100\">\n                    <div className=\"flex items-center\">\n                      <span className=\"text-2xl mr-3\">\n                        {leave.type === 'VACATION' ? '🏖️' : '🏥'}\n                      </span>\n                      <div>\n                        <p className=\"font-medium text-gray-900\">\n                          {getUserName(leave.userId)}\n                        </p>\n                        <p className=\"text-sm text-gray-500\">\n                          {new Date(leave.startDate).toLocaleDateString('de-DE')} - {new Date(leave.endDate).toLocaleDateString('de-DE')}\n                        </p>\n                      </div>\n                    </div>\n                    <div className={cn(\n                      \"px-2 py-1 rounded-full\",\n                      leave.type === 'VACATION' ? \"bg-blue-100\" : \"bg-red-100\"\n                    )}>\n                      <span className={cn(\n                        \"text-xs font-medium\",\n                        leave.type === 'VACATION' ? \"text-blue-700\" : \"text-red-700\"\n                      )}>\n                        {leave.type === 'VACATION' ? 'Urlaub' : 'Krank'}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n            </div>\n          )}\n          \n          {/* Hours Summary */}\n          {(viewMode === 'hours' || viewMode === 'both') && (\n            <div>\n              <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Arbeitszeiten-Statistik</h4>\n              {(() => {\n                const monthRecords = calendarDays.flatMap(day => day.timeRecords);\n                const userStats = ['1', '2', '3', '4', '5', '6'].map(userId => {\n                  const userRecords = monthRecords.filter(r => r.userId === userId);\n                  const totalHours = userRecords.reduce((sum, r) => sum + r.totalHours, 0);\n                  const avgHours = userRecords.length > 0 ? totalHours / userRecords.length : 0;\n                  const workDays = userRecords.length;\n                  \n                  return {\n                    userId,\n                    totalHours,\n                    avgHours,\n                    workDays,\n                    name: getUserName(userId)\n                  };\n                }).filter(stat => stat.workDays > 0);\n                \n                return userStats.map((stat) => (\n                  <div key={stat.userId} className=\"flex items-center justify-between py-2 border-b border-gray-100\">\n                    <div className=\"flex items-center\">\n                      <span className=\"text-2xl mr-3\">⏰</span>\n                      <div>\n                        <p className=\"font-medium text-gray-900\">\n                          {stat.name}\n                        </p>\n                        <p className=\"text-sm text-gray-500\">\n                          {stat.workDays} Arbeitstage\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className={cn(\n                        \"font-bold text-sm\",\n                        getHoursColor(stat.avgHours)\n                      )}>\n                        ⌀ {stat.avgHours.toFixed(1)}h\n                      </p>\n                      <p className=\"text-xs text-gray-500\">\n                        {stat.totalHours.toFixed(1)}h gesamt\n                      </p>\n                    </div>\n                  </div>\n                ));\n              })()}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}