{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { AnthropicError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch } from \"./_shims/index.mjs\";\nimport { isBlobLike, isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n  const {\n    response\n  } = props;\n  if (props.options.stream) {\n    debug('response', response.status, response.url, response.headers, response.body);\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n    if (props.options.__streamClass) {\n      return props.options.__streamClass.fromSSEResponse(response, props.controller);\n    }\n    return Stream.fromSSEResponse(response, props.controller);\n  }\n  // fetch refuses to read the body when the status code is 204.\n  if (response.status === 204) {\n    return null;\n  }\n  if (props.options.__binaryResponse) {\n    return response;\n  }\n  const contentType = response.headers.get('content-type');\n  const isJSON = contentType?.includes('application/json') || contentType?.includes('application/vnd.api+json');\n  if (isJSON) {\n    const json = await response.json();\n    debug('response', response.status, response.url, response.headers, json);\n    return _addRequestID(json, response);\n  }\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n  // TODO handle blob, arraybuffer, other content types, etc.\n  return text;\n}\nfunction _addRequestID(value, response) {\n  if (!value || typeof value !== 'object' || Array.isArray(value)) {\n    return value;\n  }\n  return Object.defineProperty(value, '_request_id', {\n    value: response.headers.get('request-id'),\n    enumerable: false\n  });\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n  constructor(responsePromise, parseResponse = defaultParseResponse) {\n    super(resolve => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null);\n    });\n    this.responsePromise = responsePromise;\n    this.parseResponse = parseResponse;\n  }\n  _thenUnwrap(transform) {\n    return new APIPromise(this.responsePromise, async props => _addRequestID(transform(await this.parseResponse(props), props), props.response));\n  }\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from '@anthropic-ai/sdk'`:\n   * - `import '@anthropic-ai/sdk/shims/node'` (if you're running on Node)\n   * - `import '@anthropic-ai/sdk/shims/web'` (otherwise)\n   */\n  asResponse() {\n    return this.responsePromise.then(p => p.response);\n  }\n  /**\n   * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n   * returned vie the `request-id` header which is useful for debugging requests and resporting\n   * issues to Anthropic.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from '@anthropic-ai/sdk'`:\n   * - `import '@anthropic-ai/sdk/shims/node'` (if you're running on Node)\n   * - `import '@anthropic-ai/sdk/shims/web'` (otherwise)\n   */\n  async withResponse() {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return {\n      data,\n      response,\n      request_id: response.headers.get('request-id')\n    };\n  }\n  parse() {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\n    }\n    return this.parsedPromise;\n  }\n  then(onfulfilled, onrejected) {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n  catch(onrejected) {\n    return this.parse().catch(onrejected);\n  }\n  finally(onfinally) {\n    return this.parse().finally(onfinally);\n  }\n}\nexport class APIClient {\n  constructor({\n    baseURL,\n    maxRetries = 2,\n    timeout = 600000,\n    // 10 minutes\n    httpAgent,\n    fetch: overriddenFetch\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n    this.fetch = overriddenFetch ?? fetch;\n  }\n  authHeaders(opts) {\n    return {};\n  }\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  defaultHeaders(opts) {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(opts)\n    };\n  }\n  /**\n   * Override this to add your own headers validation:\n   */\n  validateHeaders(headers, customHeaders) {}\n  defaultIdempotencyKey() {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n  get(path, opts) {\n    return this.methodRequest('get', path, opts);\n  }\n  post(path, opts) {\n    return this.methodRequest('post', path, opts);\n  }\n  patch(path, opts) {\n    return this.methodRequest('patch', path, opts);\n  }\n  put(path, opts) {\n    return this.methodRequest('put', path, opts);\n  }\n  delete(path, opts) {\n    return this.methodRequest('delete', path, opts);\n  }\n  methodRequest(method, path, opts) {\n    return this.request(Promise.resolve(opts).then(async opts => {\n      const body = opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer()) : opts?.body instanceof DataView ? opts.body : opts?.body instanceof ArrayBuffer ? new DataView(opts.body) : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer) : opts?.body;\n      return {\n        method,\n        path,\n        ...opts,\n        body\n      };\n    }));\n  }\n  getAPIList(path, Page, opts) {\n    return this.requestAPIList(Page, {\n      method: 'get',\n      path,\n      ...opts\n    });\n  }\n  calculateContentLength(body) {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    } else if (ArrayBuffer.isView(body)) {\n      return body.byteLength.toString();\n    }\n    return null;\n  }\n  buildRequest(options, {\n    retryCount = 0\n  } = {}) {\n    options = {\n      ...options\n    };\n    const {\n      method,\n      path,\n      query,\n      headers = {}\n    } = options;\n    const body = ArrayBuffer.isView(options.body) || options.__binaryRequest && typeof options.body === 'string' ? options.body : isMultipartBody(options.body) ? options.body.body : options.body ? JSON.stringify(options.body, null, 2) : null;\n    const contentLength = this.calculateContentLength(body);\n    const url = this.buildURL(path, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    options.timeout = options.timeout ?? this.timeout;\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n    const minAgentTimeout = options.timeout + 1000;\n    if (typeof httpAgent?.options?.timeout === 'number' && minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      httpAgent.options.timeout = minAgentTimeout;\n    }\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n    const reqHeaders = this.buildHeaders({\n      options,\n      headers,\n      contentLength,\n      retryCount\n    });\n    const req = {\n      method,\n      ...(body && {\n        body: body\n      }),\n      headers: reqHeaders,\n      ...(httpAgent && {\n        agent: httpAgent\n      }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: options.signal ?? null\n    };\n    return {\n      req,\n      url,\n      timeout: options.timeout\n    };\n  }\n  buildHeaders({\n    options,\n    headers,\n    contentLength,\n    retryCount\n  }) {\n    const reqHeaders = {};\n    if (contentLength) {\n      reqHeaders['content-length'] = contentLength;\n    }\n    const defaultHeaders = this.defaultHeaders(options);\n    applyHeadersMut(reqHeaders, defaultHeaders);\n    applyHeadersMut(reqHeaders, headers);\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && shimsKind !== 'node') {\n      delete reqHeaders['content-type'];\n    }\n    // Don't set theses headers if they were already set or removed through default headers or by the caller.\n    // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n    // for the removal case.\n    if (getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined && getHeader(headers, 'x-stainless-retry-count') === undefined) {\n      reqHeaders['x-stainless-retry-count'] = String(retryCount);\n    }\n    if (getHeader(defaultHeaders, 'x-stainless-timeout') === undefined && getHeader(headers, 'x-stainless-timeout') === undefined && options.timeout) {\n      reqHeaders['x-stainless-timeout'] = String(options.timeout);\n    }\n    this.validateHeaders(reqHeaders, headers);\n    return reqHeaders;\n  }\n  _calculateNonstreamingTimeout(maxTokens) {\n    const defaultTimeout = 10 * 60;\n    const expectedTimeout = 60 * 60 * maxTokens / 128000;\n    if (expectedTimeout > defaultTimeout) {\n      throw new AnthropicError('Streaming is strongly recommended for operations that may take longer than 10 minutes. ' + 'See https://github.com/anthropics/anthropic-sdk-python#streaming-responses for more details');\n    }\n    return defaultTimeout * 1000;\n  }\n  /**\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\n   */\n  async prepareOptions(options) {}\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  async prepareRequest(request, {\n    url,\n    options\n  }) {}\n  parseHeaders(headers) {\n    return !headers ? {} : Symbol.iterator in headers ? Object.fromEntries(Array.from(headers).map(header => [...header])) : {\n      ...headers\n    };\n  }\n  makeStatusError(status, error, message, headers) {\n    return APIError.generate(status, error, message, headers);\n  }\n  request(options, remainingRetries = null) {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n  async makeRequest(optionsInput, retriesRemaining) {\n    const options = await optionsInput;\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    if (retriesRemaining == null) {\n      retriesRemaining = maxRetries;\n    }\n    await this.prepareOptions(options);\n    const {\n      req,\n      url,\n      timeout\n    } = this.buildRequest(options, {\n      retryCount: maxRetries - retriesRemaining\n    });\n    await this.prepareRequest(req, {\n      url,\n      options\n    });\n    debug('request', url, options, req.headers);\n    if (options.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n    if (response instanceof Error) {\n      if (options.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new APIConnectionTimeoutError();\n      }\n      throw new APIConnectionError({\n        cause: response\n      });\n    }\n    const responseHeaders = createResponseHeaders(response.headers);\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n        debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n      const errText = await response.text().catch(e => castToError(e).message);\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n      const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n      debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n    return {\n      response,\n      options,\n      controller\n    };\n  }\n  requestAPIList(Page, options) {\n    const request = this.makeRequest(options, null);\n    return new PagePromise(this, request, Page);\n  }\n  buildURL(path, query) {\n    const url = isAbsoluteURL(path) ? new URL(path) : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = {\n        ...defaultQuery,\n        ...query\n      };\n    }\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\n      url.search = this.stringifyQuery(query);\n    }\n    return url.toString();\n  }\n  stringifyQuery(query) {\n    return Object.entries(query).filter(([_, value]) => typeof value !== 'undefined').map(([key, value]) => {\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n      }\n      if (value === null) {\n        return `${encodeURIComponent(key)}=`;\n      }\n      throw new AnthropicError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n    }).join('&');\n  }\n  async fetchWithTimeout(url, init, ms, controller) {\n    const {\n      signal,\n      ...options\n    } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n    const timeout = setTimeout(() => controller.abort(), ms);\n    const fetchOptions = {\n      signal: controller.signal,\n      ...options\n    };\n    if (fetchOptions.method) {\n      // Custom methods like 'patch' need to be uppercased\n      // See https://github.com/nodejs/undici/issues/2294\n      fetchOptions.method = fetchOptions.method.toUpperCase();\n    }\n    // turn on TCP keep-alive for the sockets, if the runtime supports it\n    const socketKeepAliveInterval = 60 * 1000;\n    const keepAliveTimeout = setTimeout(() => {\n      if (fetchOptions && fetchOptions?.agent?.sockets) {\n        for (const socket of Object.values(fetchOptions?.agent?.sockets).flat()) {\n          if (socket?.setKeepAlive) {\n            socket.setKeepAlive(true, socketKeepAliveInterval);\n          }\n        }\n      }\n    }, socketKeepAliveInterval);\n    return (\n      // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n      this.fetch.call(undefined, url, fetchOptions).finally(() => {\n        clearTimeout(timeout);\n        clearTimeout(keepAliveTimeout);\n      })\n    );\n  }\n  shouldRetry(response) {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n    return false;\n  }\n  async retryRequest(options, retriesRemaining, responseHeaders) {\n    let timeoutMillis;\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n    const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n    if (retryAfterMillisHeader) {\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\n      if (!Number.isNaN(timeoutMs)) {\n        timeoutMillis = timeoutMs;\n      }\n    }\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    const retryAfterHeader = responseHeaders?.['retry-after'];\n    if (retryAfterHeader && !timeoutMillis) {\n      const timeoutSeconds = parseFloat(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n      const maxRetries = options.maxRetries ?? this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await sleep(timeoutMillis);\n    return this.makeRequest(options, retriesRemaining - 1);\n  }\n  calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 8.0;\n    const numRetries = maxRetries - retriesRemaining;\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n    // Apply some jitter, take up to at most 25 percent of the retry time.\n    const jitter = 1 - Math.random() * 0.25;\n    return sleepSeconds * jitter * 1000;\n  }\n  getUserAgent() {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n}\nexport class AbstractPage {\n  constructor(client, response, body, options) {\n    _AbstractPage_client.set(this, void 0);\n    __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n  hasNextPage() {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n  async getNextPage() {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new AnthropicError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n    }\n    const nextOptions = {\n      ...this.options\n    };\n    if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n      nextOptions.query = {\n        ...nextOptions.query,\n        ...nextInfo.params\n      };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n  }\n  async *iterPages() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n  async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n  constructor(client, request, Page) {\n    super(request, async props => new Page(client, props.response, await defaultParseResponse(props), props.options));\n  }\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator]() {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\nexport const createResponseHeaders = headers => {\n  return new Proxy(Object.fromEntries(\n  // @ts-ignore\n  headers.entries()), {\n    get(target, name) {\n      const key = name.toString();\n      return target[key.toLowerCase()] || target[key];\n    }\n  });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true,\n  __binaryRequest: true,\n  __binaryResponse: true,\n  __streamClass: true\n};\nexport const isRequestOptions = obj => {\n  return typeof obj === 'object' && obj !== null && !isEmptyObj(obj) && Object.keys(obj).every(k => hasOwn(requestOptionsKeys, k));\n};\nconst getPlatformProperties = () => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown'\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version\n    };\n  }\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown'\n  };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n  // NOTE: The order matters here!\n  const browserPatterns = [{\n    key: 'edge',\n    pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'chrome',\n    pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'firefox',\n    pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'safari',\n    pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/\n  }];\n  // Find the FIRST matching browser\n  for (const {\n    key,\n    pattern\n  } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n      return {\n        browser: key,\n        version: `${major}.${minor}.${patch}`\n      };\n    }\n  }\n  return null;\n}\nconst normalizeArch = arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\nconst normalizePlatform = platform => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n  platform = platform.toLowerCase();\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n  return _platformHeaders ?? (_platformHeaders = getPlatformProperties());\n};\nexport const safeJSON = text => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = url => {\n  return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new AnthropicError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new AnthropicError(`${name} must be a positive integer`);\n  }\n  return n;\n};\nexport const castToError = err => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      return new Error(JSON.stringify(err));\n    } catch {}\n  }\n  return new Error(String(err));\n};\nexport const ensurePresent = value => {\n  if (value == null) throw new AnthropicError(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = env => {\n  if (typeof process !== 'undefined') {\n    return process.env?.[env]?.trim() ?? undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return Deno.env?.get?.(env)?.trim();\n  }\n  return undefined;\n};\nexport const coerceInteger = value => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n  throw new AnthropicError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = value => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n  throw new AnthropicError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = value => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\nexport const maybeCoerceInteger = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\nexport const maybeCoerceFloat = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n  for (const k in newHeaders) {\n    if (!hasOwn(newHeaders, k)) continue;\n    const lowerKey = k.toLowerCase();\n    if (!lowerKey) continue;\n    const val = newHeaders[k];\n    if (val === null) {\n      delete targetHeaders[lowerKey];\n    } else if (val !== undefined) {\n      targetHeaders[lowerKey] = val;\n    }\n  }\n}\nexport function debug(action, ...args) {\n  if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n    console.log(`Anthropic:DEBUG:${action}`, ...args);\n  }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\nexport const isHeadersProtocol = headers => {\n  return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n  const foundHeader = getHeader(headers, header);\n  if (foundHeader === undefined) {\n    throw new Error(`Could not find ${header} header`);\n  }\n  return foundHeader;\n};\nexport const getHeader = (headers, header) => {\n  const lowerCasedHeader = header.toLowerCase();\n  if (isHeadersProtocol(headers)) {\n    // to deal with the case where the header looks like Stainless-Event-Id\n    const intercapsHeader = header[0]?.toUpperCase() + header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n    for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n      const value = headers.get(key);\n      if (value) {\n        return value;\n      }\n    }\n  }\n  for (const [key, value] of Object.entries(headers)) {\n    if (key.toLowerCase() === lowerCasedHeader) {\n      if (Array.isArray(value)) {\n        if (value.length <= 1) return value[0];\n        console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n        return value[0];\n      }\n      return value;\n    }\n  }\n  return undefined;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = str => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n  throw new AnthropicError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport function isObj(obj) {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}","map":{"version":3,"names":["VERSION","Stream","AnthropicError","APIError","APIConnectionError","APIConnectionTimeoutError","APIUserAbortError","kind","shimsKind","getDefaultAgent","fetch","isBlobLike","isMultipartBody","maybeMultipartFormRequestOptions","multipartFormRequestOptions","createForm","defaultParseResponse","props","response","options","stream","debug","status","url","headers","body","__streamClass","fromSSEResponse","controller","__binaryResponse","contentType","get","isJSON","includes","json","_addRequestID","text","value","Array","isArray","Object","defineProperty","enumerable","APIPromise","Promise","constructor","responsePromise","parseResponse","resolve","_thenUnwrap","transform","asResponse","then","p","withResponse","data","all","parse","request_id","parsedPromise","onfulfilled","onrejected","catch","finally","onfinally","APIClient","baseURL","maxRetries","timeout","httpAgent","overriddenFetch","validatePositiveInteger","authHeaders","opts","defaultHeaders","Accept","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","path","methodRequest","post","patch","put","delete","method","request","DataView","arrayBuffer","ArrayBuffer","isView","buffer","getAPIList","Page","requestAPIList","calculateContentLength","Buffer","byteLength","toString","TextEncoder","encoder","encoded","encode","length","buildRequest","retryCount","query","__binaryRequest","JSON","stringify","contentLength","buildURL","minAgentTimeout","idempotencyHeader","idempotencyKey","reqHeaders","buildHeaders","req","agent","signal","applyHeadersMut","getHeader","undefined","String","_calculateNonstreamingTimeout","maxTokens","defaultTimeout","expectedTimeout","prepareOptions","prepareRequest","parseHeaders","Symbol","iterator","fromEntries","from","map","header","makeStatusError","error","message","generate","remainingRetries","makeRequest","optionsInput","retriesRemaining","aborted","AbortController","fetchWithTimeout","castToError","Error","retryRequest","name","cause","responseHeaders","createResponseHeaders","ok","shouldRetry","retryMessage","errText","e","errJSON","safeJSON","errMessage","err","PagePromise","isAbsoluteURL","URL","endsWith","startsWith","slice","defaultQuery","isEmptyObj","search","stringifyQuery","entries","filter","_","key","encodeURIComponent","join","init","ms","addEventListener","abort","setTimeout","fetchOptions","toUpperCase","socketKeepAliveInterval","keepAliveTimeout","sockets","socket","values","flat","setKeepAlive","call","clearTimeout","shouldRetryHeader","timeoutMillis","retryAfterMillisHeader","timeoutMs","parseFloat","Number","isNaN","retryAfterHeader","timeoutSeconds","Date","now","calculateDefaultRetryTimeoutMillis","sleep","initialRetryDelay","maxRetryDelay","numRetries","sleepSeconds","Math","min","pow","jitter","random","AbstractPage","client","_AbstractPage_client","set","__classPrivateFieldSet","hasNextPage","items","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","params","searchParams","__classPrivateFieldGet","iterPages","page","WeakMap","asyncIterator","item","Proxy","target","toLowerCase","requestOptionsKeys","isRequestOptions","obj","keys","every","k","hasOwn","getPlatformProperties","Deno","build","normalizePlatform","os","normalizeArch","arch","version","deno","EdgeRuntime","process","prototype","platform","browserInfo","getBrowserInfo","browser","navigator","browserPatterns","pattern","match","exec","userAgent","major","minor","_platformHeaders","startsWithSchemeRegexp","test","n","isInteger","ensurePresent","readEnv","env","trim","coerceInteger","round","parseInt","coerceFloat","coerceBoolean","Boolean","maybeCoerceInteger","maybeCoerceFloat","maybeCoerceBoolean","_k","hasOwnProperty","targetHeaders","newHeaders","lowerKey","val","action","args","console","log","replace","c","r","v","isRunningInBrowser","window","document","isHeadersProtocol","getRequiredHeader","foundHeader","lowerCasedHeader","intercapsHeader","substring","_m","g1","g2","warn","toBase64","str","btoa","isObj"],"sources":["/Users/halteverbotsocialmacpro/Desktop/ars vivai/Worky Time/worky-time-web/node_modules/@anthropic-ai/sdk/src/core.ts"],"sourcesContent":["import { VERSION } from \"./version.js\";\nimport { Stream } from \"./streaming.js\";\nimport {\n  AnthropicError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n} from \"./error.js\";\nimport {\n  kind as shimsKind,\n  type Readable,\n  getDefaultAgent,\n  type Agent,\n  fetch,\n  type RequestInfo,\n  type RequestInit,\n  type Response,\n  type HeadersInit,\n} from \"./_shims/index.js\";\nexport { type Response };\nimport { BlobLike, isBlobLike, isMultipartBody } from \"./uploads.js\";\nexport {\n  maybeMultipartFormRequestOptions,\n  multipartFormRequestOptions,\n  createForm,\n  type Uploadable,\n} from \"./uploads.js\";\n\nexport type Fetch = (url: RequestInfo, init?: RequestInit) => Promise<Response>;\n\ntype PromiseOrValue<T> = T | Promise<T>;\n\ntype APIResponseProps = {\n  response: Response;\n  options: FinalRequestOptions;\n  controller: AbortController;\n};\n\nasync function defaultParseResponse<T>(props: APIResponseProps): Promise<WithRequestID<T>> {\n  const { response } = props;\n  if (props.options.stream) {\n    debug('response', response.status, response.url, response.headers, response.body);\n\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n\n    if (props.options.__streamClass) {\n      return props.options.__streamClass.fromSSEResponse(response, props.controller) as any;\n    }\n\n    return Stream.fromSSEResponse(response, props.controller) as any;\n  }\n\n  // fetch refuses to read the body when the status code is 204.\n  if (response.status === 204) {\n    return null as WithRequestID<T>;\n  }\n\n  if (props.options.__binaryResponse) {\n    return response as unknown as WithRequestID<T>;\n  }\n\n  const contentType = response.headers.get('content-type');\n  const isJSON =\n    contentType?.includes('application/json') || contentType?.includes('application/vnd.api+json');\n  if (isJSON) {\n    const json = await response.json();\n\n    debug('response', response.status, response.url, response.headers, json);\n\n    return _addRequestID(json as T, response);\n  }\n\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n\n  // TODO handle blob, arraybuffer, other content types, etc.\n  return text as unknown as WithRequestID<T>;\n}\n\ntype WithRequestID<T> =\n  T extends Array<any> | Response | AbstractPage<any> ? T\n  : T extends Record<string, any> ? T & { _request_id?: string | null }\n  : T;\n\nfunction _addRequestID<T>(value: T, response: Response): WithRequestID<T> {\n  if (!value || typeof value !== 'object' || Array.isArray(value)) {\n    return value as WithRequestID<T>;\n  }\n\n  return Object.defineProperty(value, '_request_id', {\n    value: response.headers.get('request-id'),\n    enumerable: false,\n  }) as WithRequestID<T>;\n}\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise<T> extends Promise<WithRequestID<T>> {\n  private parsedPromise: Promise<WithRequestID<T>> | undefined;\n\n  constructor(\n    private responsePromise: Promise<APIResponseProps>,\n    private parseResponse: (\n      props: APIResponseProps,\n    ) => PromiseOrValue<WithRequestID<T>> = defaultParseResponse,\n  ) {\n    super((resolve) => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null as any);\n    });\n  }\n\n  _thenUnwrap<U>(transform: (data: T, props: APIResponseProps) => U): APIPromise<U> {\n    return new APIPromise(this.responsePromise, async (props) =>\n      _addRequestID(transform(await this.parseResponse(props), props), props.response),\n    );\n  }\n\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from '@anthropic-ai/sdk'`:\n   * - `import '@anthropic-ai/sdk/shims/node'` (if you're running on Node)\n   * - `import '@anthropic-ai/sdk/shims/web'` (otherwise)\n   */\n  asResponse(): Promise<Response> {\n    return this.responsePromise.then((p) => p.response);\n  }\n\n  /**\n   * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n   * returned vie the `request-id` header which is useful for debugging requests and resporting\n   * issues to Anthropic.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from '@anthropic-ai/sdk'`:\n   * - `import '@anthropic-ai/sdk/shims/node'` (if you're running on Node)\n   * - `import '@anthropic-ai/sdk/shims/web'` (otherwise)\n   */\n  async withResponse(): Promise<{ data: T; response: Response; request_id: string | null | undefined }> {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return { data, response, request_id: response.headers.get('request-id') };\n  }\n\n  private parse(): Promise<WithRequestID<T>> {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse) as any as Promise<WithRequestID<T>>;\n    }\n    return this.parsedPromise;\n  }\n\n  override then<TResult1 = WithRequestID<T>, TResult2 = never>(\n    onfulfilled?: ((value: WithRequestID<T>) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n\n  override catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): Promise<WithRequestID<T> | TResult> {\n    return this.parse().catch(onrejected);\n  }\n\n  override finally(onfinally?: (() => void) | undefined | null): Promise<WithRequestID<T>> {\n    return this.parse().finally(onfinally);\n  }\n}\n\nexport abstract class APIClient {\n  baseURL: string;\n  maxRetries: number;\n  timeout: number;\n  httpAgent: Agent | undefined;\n\n  private fetch: Fetch;\n  protected idempotencyHeader?: string;\n\n  constructor({\n    baseURL,\n    maxRetries = 2,\n    timeout = 600000, // 10 minutes\n    httpAgent,\n    fetch: overriddenFetch,\n  }: {\n    baseURL: string;\n    maxRetries?: number | undefined;\n    timeout: number | undefined;\n    httpAgent: Agent | undefined;\n    fetch: Fetch | undefined;\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n\n    this.fetch = overriddenFetch ?? fetch;\n  }\n\n  protected authHeaders(opts: FinalRequestOptions): Headers {\n    return {};\n  }\n\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  protected defaultHeaders(opts: FinalRequestOptions): Headers {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(opts),\n    };\n  }\n\n  protected abstract defaultQuery(): DefaultQuery | undefined;\n\n  /**\n   * Override this to add your own headers validation:\n   */\n  protected validateHeaders(headers: Headers, customHeaders: Headers) {}\n\n  protected defaultIdempotencyKey(): string {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n\n  get<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('get', path, opts);\n  }\n\n  post<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('post', path, opts);\n  }\n\n  patch<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('patch', path, opts);\n  }\n\n  put<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('put', path, opts);\n  }\n\n  delete<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('delete', path, opts);\n  }\n\n  private methodRequest<Req, Rsp>(\n    method: HTTPMethod,\n    path: string,\n    opts?: PromiseOrValue<RequestOptions<Req>>,\n  ): APIPromise<Rsp> {\n    return this.request(\n      Promise.resolve(opts).then(async (opts) => {\n        const body =\n          opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n          : opts?.body instanceof DataView ? opts.body\n          : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n          : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n          : opts?.body;\n        return { method, path, ...opts, body };\n      }),\n    );\n  }\n\n  getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    path: string,\n    Page: new (...args: any[]) => PageClass,\n    opts?: RequestOptions<any>,\n  ): PagePromise<PageClass, Item> {\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\n  }\n\n  private calculateContentLength(body: unknown): string | null {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    } else if (ArrayBuffer.isView(body)) {\n      return body.byteLength.toString();\n    }\n\n    return null;\n  }\n\n  buildRequest<Req>(\n    options: FinalRequestOptions<Req>,\n    { retryCount = 0 }: { retryCount?: number } = {},\n  ): { req: RequestInit; url: string; timeout: number } {\n    options = { ...options };\n    const { method, path, query, headers: headers = {} } = options;\n\n    const body =\n      ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n        options.body\n      : isMultipartBody(options.body) ? options.body.body\n      : options.body ? JSON.stringify(options.body, null, 2)\n      : null;\n    const contentLength = this.calculateContentLength(body);\n\n    const url = this.buildURL(path!, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    options.timeout = options.timeout ?? this.timeout;\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n    const minAgentTimeout = options.timeout + 1000;\n    if (\n      typeof (httpAgent as any)?.options?.timeout === 'number' &&\n      minAgentTimeout > ((httpAgent as any).options.timeout ?? 0)\n    ) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      (httpAgent as any).options.timeout = minAgentTimeout;\n    }\n\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n\n    const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n\n    const req: RequestInit = {\n      method,\n      ...(body && { body: body as any }),\n      headers: reqHeaders,\n      ...(httpAgent && { agent: httpAgent }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: options.signal ?? null,\n    };\n\n    return { req, url, timeout: options.timeout };\n  }\n\n  private buildHeaders({\n    options,\n    headers,\n    contentLength,\n    retryCount,\n  }: {\n    options: FinalRequestOptions;\n    headers: Record<string, string | null | undefined>;\n    contentLength: string | null | undefined;\n    retryCount: number;\n  }): Record<string, string> {\n    const reqHeaders: Record<string, string> = {};\n    if (contentLength) {\n      reqHeaders['content-length'] = contentLength;\n    }\n\n    const defaultHeaders = this.defaultHeaders(options);\n    applyHeadersMut(reqHeaders, defaultHeaders);\n    applyHeadersMut(reqHeaders, headers);\n\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && shimsKind !== 'node') {\n      delete reqHeaders['content-type'];\n    }\n\n    // Don't set theses headers if they were already set or removed through default headers or by the caller.\n    // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n    // for the removal case.\n    if (\n      getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n      getHeader(headers, 'x-stainless-retry-count') === undefined\n    ) {\n      reqHeaders['x-stainless-retry-count'] = String(retryCount);\n    }\n    if (\n      getHeader(defaultHeaders, 'x-stainless-timeout') === undefined &&\n      getHeader(headers, 'x-stainless-timeout') === undefined &&\n      options.timeout\n    ) {\n      reqHeaders['x-stainless-timeout'] = String(options.timeout);\n    }\n\n    this.validateHeaders(reqHeaders, headers);\n\n    return reqHeaders;\n  }\n\n  _calculateNonstreamingTimeout(maxTokens: number): number {\n    const defaultTimeout = 10 * 60;\n    const expectedTimeout = (60 * 60 * maxTokens) / 128_000;\n    if (expectedTimeout > defaultTimeout) {\n      throw new AnthropicError(\n        'Streaming is strongly recommended for operations that may take longer than 10 minutes. ' +\n          'See https://github.com/anthropics/anthropic-sdk-python#streaming-responses for more details',\n      );\n    }\n    return defaultTimeout * 1000;\n  }\n\n  /**\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\n   */\n  protected async prepareOptions(options: FinalRequestOptions): Promise<void> {}\n\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  protected async prepareRequest(\n    request: RequestInit,\n    { url, options }: { url: string; options: FinalRequestOptions },\n  ): Promise<void> {}\n\n  protected parseHeaders(headers: HeadersInit | null | undefined): Record<string, string> {\n    return (\n      !headers ? {}\n      : Symbol.iterator in headers ?\n        Object.fromEntries(Array.from(headers as Iterable<string[]>).map((header) => [...header]))\n      : { ...headers }\n    );\n  }\n\n  protected makeStatusError(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    return APIError.generate(status, error, message, headers);\n  }\n\n  request<Req, Rsp>(\n    options: PromiseOrValue<FinalRequestOptions<Req>>,\n    remainingRetries: number | null = null,\n  ): APIPromise<Rsp> {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n\n  private async makeRequest<Req>(\n    optionsInput: PromiseOrValue<FinalRequestOptions<Req>>,\n    retriesRemaining: number | null,\n  ): Promise<APIResponseProps> {\n    const options = await optionsInput;\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    if (retriesRemaining == null) {\n      retriesRemaining = maxRetries;\n    }\n\n    await this.prepareOptions(options);\n\n    const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n\n    await this.prepareRequest(req, { url, options });\n\n    debug('request', url, options, req.headers);\n\n    if (options.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n\n    if (response instanceof Error) {\n      if (options.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new APIConnectionTimeoutError();\n      }\n      throw new APIConnectionError({ cause: response });\n    }\n\n    const responseHeaders = createResponseHeaders(response.headers);\n\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n        debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n\n      const errText = await response.text().catch((e) => castToError(e).message);\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n      const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n\n      debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n\n    return { response, options, controller };\n  }\n\n  requestAPIList<Item = unknown, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n    options: FinalRequestOptions,\n  ): PagePromise<PageClass, Item> {\n    const request = this.makeRequest(options, null);\n    return new PagePromise<PageClass, Item>(this, request, Page);\n  }\n\n  buildURL<Req>(path: string, query: Req | null | undefined): string {\n    const url =\n      isAbsoluteURL(path) ?\n        new URL(path)\n      : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = { ...defaultQuery, ...query } as Req;\n    }\n\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\n      url.search = this.stringifyQuery(query as Record<string, unknown>);\n    }\n\n    return url.toString();\n  }\n\n  protected stringifyQuery(query: Record<string, unknown>): string {\n    return Object.entries(query)\n      .filter(([_, value]) => typeof value !== 'undefined')\n      .map(([key, value]) => {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n        }\n        if (value === null) {\n          return `${encodeURIComponent(key)}=`;\n        }\n        throw new AnthropicError(\n          `Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`,\n        );\n      })\n      .join('&');\n  }\n\n  async fetchWithTimeout(\n    url: RequestInfo,\n    init: RequestInit | undefined,\n    ms: number,\n    controller: AbortController,\n  ): Promise<Response> {\n    const { signal, ...options } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n\n    const timeout = setTimeout(() => controller.abort(), ms);\n\n    const fetchOptions = {\n      signal: controller.signal as any,\n      ...options,\n    };\n    if (fetchOptions.method) {\n      // Custom methods like 'patch' need to be uppercased\n      // See https://github.com/nodejs/undici/issues/2294\n      fetchOptions.method = fetchOptions.method.toUpperCase();\n    }\n\n    // turn on TCP keep-alive for the sockets, if the runtime supports it\n    const socketKeepAliveInterval = 60 * 1000;\n    const keepAliveTimeout = setTimeout(() => {\n      if (fetchOptions && (fetchOptions as any)?.agent?.sockets) {\n        for (const socket of Object.values((fetchOptions as any)?.agent?.sockets).flat()) {\n          if ((socket as any)?.setKeepAlive) {\n            (socket as any).setKeepAlive(true, socketKeepAliveInterval);\n          }\n        }\n      }\n    }, socketKeepAliveInterval);\n\n    return (\n      // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n      this.fetch.call(undefined, url, fetchOptions).finally(() => {\n        clearTimeout(timeout);\n        clearTimeout(keepAliveTimeout);\n      })\n    );\n  }\n\n  private shouldRetry(response: Response): boolean {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n\n    return false;\n  }\n\n  private async retryRequest(\n    options: FinalRequestOptions,\n    retriesRemaining: number,\n    responseHeaders?: Headers | undefined,\n  ): Promise<APIResponseProps> {\n    let timeoutMillis: number | undefined;\n\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n    const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n    if (retryAfterMillisHeader) {\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\n      if (!Number.isNaN(timeoutMs)) {\n        timeoutMillis = timeoutMs;\n      }\n    }\n\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    const retryAfterHeader = responseHeaders?.['retry-after'];\n    if (retryAfterHeader && !timeoutMillis) {\n      const timeoutSeconds = parseFloat(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n      const maxRetries = options.maxRetries ?? this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await sleep(timeoutMillis);\n\n    return this.makeRequest(options, retriesRemaining - 1);\n  }\n\n  private calculateDefaultRetryTimeoutMillis(retriesRemaining: number, maxRetries: number): number {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 8.0;\n\n    const numRetries = maxRetries - retriesRemaining;\n\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n\n    // Apply some jitter, take up to at most 25 percent of the retry time.\n    const jitter = 1 - Math.random() * 0.25;\n\n    return sleepSeconds * jitter * 1000;\n  }\n\n  private getUserAgent(): string {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n}\n\nexport type PageInfo = { url: URL } | { params: Record<string, unknown> | null };\n\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\n  #client: APIClient;\n  protected options: FinalRequestOptions;\n\n  protected response: Response;\n  protected body: unknown;\n\n  constructor(client: APIClient, response: Response, body: unknown, options: FinalRequestOptions) {\n    this.#client = client;\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n\n  /**\n   * @deprecated Use nextPageInfo instead\n   */\n  abstract nextPageParams(): Partial<Record<string, unknown>> | null;\n  abstract nextPageInfo(): PageInfo | null;\n\n  abstract getPaginatedItems(): Item[];\n\n  hasNextPage(): boolean {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n\n  async getNextPage(): Promise<this> {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new AnthropicError(\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\n      );\n    }\n    const nextOptions = { ...this.options };\n    if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n      nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value as any);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\n  }\n\n  async *iterPages(): AsyncGenerator<this> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page: this = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise<\n    PageClass extends AbstractPage<Item>,\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\n  >\n  extends APIPromise<PageClass>\n  implements AsyncIterable<Item>\n{\n  constructor(\n    client: APIClient,\n    request: Promise<APIResponseProps>,\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n  ) {\n    super(\n      request,\n      async (props) =>\n        new Page(\n          client,\n          props.response,\n          await defaultParseResponse(props),\n          props.options,\n        ) as WithRequestID<PageClass>,\n    );\n  }\n\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\n\nexport const createResponseHeaders = (\n  headers: Awaited<ReturnType<Fetch>>['headers'],\n): Record<string, string> => {\n  return new Proxy(\n    Object.fromEntries(\n      // @ts-ignore\n      headers.entries(),\n    ),\n    {\n      get(target, name) {\n        const key = name.toString();\n        return target[key.toLowerCase()] || target[key];\n      },\n    },\n  );\n};\n\ntype HTTPMethod = 'get' | 'post' | 'put' | 'patch' | 'delete';\n\nexport type RequestClient = { fetch: Fetch };\nexport type Headers = Record<string, string | null | undefined>;\nexport type DefaultQuery = Record<string, string | undefined>;\nexport type KeysEnum<T> = { [P in keyof Required<T>]: true };\n\nexport type RequestOptions<\n  Req = unknown | Record<string, unknown> | Readable | BlobLike | ArrayBufferView | ArrayBuffer,\n> = {\n  method?: HTTPMethod;\n  path?: string;\n  query?: Req | undefined;\n  body?: Req | null | undefined;\n  headers?: Headers | undefined;\n\n  maxRetries?: number;\n  stream?: boolean | undefined;\n  timeout?: number;\n  httpAgent?: Agent;\n  signal?: AbortSignal | undefined | null;\n  idempotencyKey?: string;\n\n  __binaryRequest?: boolean | undefined;\n  __binaryResponse?: boolean | undefined;\n  __streamClass?: typeof Stream;\n};\n\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys: KeysEnum<RequestOptions> = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true,\n\n  __binaryRequest: true,\n  __binaryResponse: true,\n  __streamClass: true,\n};\n\nexport const isRequestOptions = (obj: unknown): obj is RequestOptions => {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    !isEmptyObj(obj) &&\n    Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k))\n  );\n};\n\nexport type FinalRequestOptions<Req = unknown | Record<string, unknown> | Readable | DataView> =\n  RequestOptions<Req> & {\n    method: HTTPMethod;\n    path: string;\n  };\n\ndeclare const Deno: any;\ndeclare const EdgeRuntime: any;\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\ntype PlatformName =\n  | 'MacOS'\n  | 'Linux'\n  | 'Windows'\n  | 'FreeBSD'\n  | 'OpenBSD'\n  | 'iOS'\n  | 'Android'\n  | `Other:${string}`\n  | 'Unknown';\ntype Browser = 'ie' | 'edge' | 'chrome' | 'firefox' | 'safari';\ntype PlatformProperties = {\n  'X-Stainless-Lang': 'js';\n  'X-Stainless-Package-Version': string;\n  'X-Stainless-OS': PlatformName;\n  'X-Stainless-Arch': Arch;\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | `browser:${Browser}` | 'unknown';\n  'X-Stainless-Runtime-Version': string;\n};\nconst getPlatformProperties = (): PlatformProperties => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version':\n        typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version,\n    };\n  }\n\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown',\n  };\n};\n\ntype BrowserInfo = {\n  browser: Browser;\n  version: string;\n};\n\ndeclare const navigator: { userAgent: string } | undefined;\n\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo(): BrowserInfo | null {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n\n  // NOTE: The order matters here!\n  const browserPatterns = [\n    { key: 'edge' as const, pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'chrome' as const, pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'firefox' as const, pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'safari' as const, pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n  ];\n\n  // Find the FIRST matching browser\n  for (const { key, pattern } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n\n      return { browser: key, version: `${major}.${minor}.${patch}` };\n    }\n  }\n\n  return null;\n}\n\nconst normalizeArch = (arch: string): Arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\n\nconst normalizePlatform = (platform: string): PlatformName => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n\n  platform = platform.toLowerCase();\n\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\n\nlet _platformHeaders: PlatformProperties;\nconst getPlatformHeaders = () => {\n  return (_platformHeaders ??= getPlatformProperties());\n};\n\nexport const safeJSON = (text: string) => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url: string): boolean => {\n  return startsWithSchemeRegexp.test(url);\n};\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst validatePositiveInteger = (name: string, n: unknown): number => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new AnthropicError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new AnthropicError(`${name} must be a positive integer`);\n  }\n  return n;\n};\n\nexport const castToError = (err: any): Error => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      return new Error(JSON.stringify(err));\n    } catch {}\n  }\n  return new Error(String(err));\n};\n\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\n  if (value == null) throw new AnthropicError(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env: string): string | undefined => {\n  if (typeof process !== 'undefined') {\n    return process.env?.[env]?.trim() ?? undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return Deno.env?.get?.(env)?.trim();\n  }\n  return undefined;\n};\n\nexport const coerceInteger = (value: unknown): number => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n\n  throw new AnthropicError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceFloat = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n\n  throw new AnthropicError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceBoolean = (value: unknown): boolean => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\n\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\n\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\n\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj: Object, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders: Headers, newHeaders: Headers): void {\n  for (const k in newHeaders) {\n    if (!hasOwn(newHeaders, k)) continue;\n    const lowerKey = k.toLowerCase();\n    if (!lowerKey) continue;\n\n    const val = newHeaders[k];\n\n    if (val === null) {\n      delete targetHeaders[lowerKey];\n    } else if (val !== undefined) {\n      targetHeaders[lowerKey] = val;\n    }\n  }\n}\n\nexport function debug(action: string, ...args: any[]) {\n  if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n    console.log(`Anthropic:DEBUG:${action}`, ...args);\n  }\n}\n\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\n\nexport interface HeadersProtocol {\n  get: (header: string) => string | null | undefined;\n}\nexport type HeadersLike = Record<string, string | string[] | undefined> | HeadersProtocol;\n\nexport const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {\n  return typeof headers?.get === 'function';\n};\n\nexport const getRequiredHeader = (headers: HeadersLike | Headers, header: string): string => {\n  const foundHeader = getHeader(headers, header);\n  if (foundHeader === undefined) {\n    throw new Error(`Could not find ${header} header`);\n  }\n  return foundHeader;\n};\n\nexport const getHeader = (headers: HeadersLike | Headers, header: string): string | undefined => {\n  const lowerCasedHeader = header.toLowerCase();\n  if (isHeadersProtocol(headers)) {\n    // to deal with the case where the header looks like Stainless-Event-Id\n    const intercapsHeader =\n      header[0]?.toUpperCase() +\n      header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n    for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n      const value = headers.get(key);\n      if (value) {\n        return value;\n      }\n    }\n  }\n\n  for (const [key, value] of Object.entries(headers)) {\n    if (key.toLowerCase() === lowerCasedHeader) {\n      if (Array.isArray(value)) {\n        if (value.length <= 1) return value[0];\n        console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n        return value[0];\n      }\n      return value;\n    }\n  }\n\n  return undefined;\n};\n\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str: string | null | undefined): string => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n\n  throw new AnthropicError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n\nexport function isObj(obj: unknown): obj is Record<string, unknown> {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}